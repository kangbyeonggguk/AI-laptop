{"version":3,"file":"static/js/391.435d6806.chunk.js","mappings":"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","sources":["goods/pages/Goods.js","goods/pages/Goodsroute.js","goods/components/Goods-http-hook.js","goods/components/Imgslide.js","goods/pages/Goodsview.js","shared/Pagetitle/Pagetitle.js","shared/UIElements/Backdrop.js","shared/UIElements/Card.js","shared/UIElements/Filter.js","shared/UIElements/Modal.js","shared/UIElements/Page.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Goods.css\";\r\nimport Pagetitle from \"../../shared/Pagetitle/Pagetitle\";\r\nimport Filter from \"../../shared/UIElements/Filter\";\r\nimport Page from \"../../shared/UIElements/Page\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"; //api호출 훅 불러오기\r\n\r\nconst Goods = (props) => {\r\n  const isLoading = props.isLoading;\r\n  const loadedGoods = props.loadedGoods;\r\n  const itemlen = props.totalcount;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoading && loadedGoods && (\r\n        <>\r\n          <div className=\"goods\">\r\n            <Pagetitle title=\"구매하기\">\r\n              판매자들의 노트북을 구매할 수 있습니다\r\n            </Pagetitle>\r\n            <div className=\"goods_sortcontain\">\r\n              <Filter title=\"낮은가격순\"></Filter>\r\n            </div>\r\n            <div className=\"goods_notebookcontain\">\r\n              {!props.error &&\r\n                loadedGoods.map((notebook, index) => (\r\n                  <NavLink\r\n                    key={index}\r\n                    to={`/main/goods/detail/${notebook.laptop_info_list_id}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <div className=\"goods_notebook\" key={index}>\r\n                      <div>\r\n                        {/*-- */}\r\n                        <div className=\"goods_notebook_imgbox center\">\r\n                          {notebook.laptop_info_list.laptop_info_list_image\r\n                            .length > 0 ? (\r\n                            <img\r\n                              className=\"goods_notebook_img\"\r\n                              src={`${\r\n                                notebook.laptop_info_list\r\n                                  .laptop_info_list_image[\r\n                                  notebook.laptop_info_list\r\n                                    .laptop_info_list_image.length - 1\r\n                                ].path\r\n                              }`}\r\n                              alt=\"notebookimage\"\r\n                            />\r\n                          ) : (\r\n                            <div>No Image Available</div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"goods_notebook_name\">\r\n                          [{notebook.title}]\r\n                          {notebook.laptop_info_list.device_name}\r\n                        </div>\r\n                        <div className=\"goods_notebook_pricecontain\">\r\n                          <div className=\"goods_notebook_price\">\r\n                            {notebook.price_time_sale\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            원\r\n                          </div>\r\n                          <div className=\"goods_notebook_discount\">\r\n                            {notebook.price\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            원\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/*-- */}\r\n                      <div>\r\n                        <div className=\"goods_notebook_des\">\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">OS</div>\r\n                            <div className=\"goods_des_value\">\r\n                              <img\r\n                                className=\"goods_dev_osimg\"\r\n                                src={`/img/goods/Window 10 HOME.png`}\r\n                              />\r\n                              {notebook.os}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">화면크기</div>\r\n                            <div className=\"goods_des_value\">\r\n                              <img\r\n                                className=\"goods_dev_scaleimg\"\r\n                                src={`/img/goods/scale.png`}\r\n                              />\r\n                              {notebook.laptop_info_list.screen_size}인치\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">업무용</div>\r\n                            <div className=\"goods_des_value\">\r\n                              {notebook.laptop_info_list.business_usage\r\n                                .split(\",\")\r\n                                .map((img, index) => (\r\n                                  <img\r\n                                    key={index}\r\n                                    className=\"goods_dev_useimg\"\r\n                                    src={`/img/goods/${img}.png`}\r\n                                  />\r\n                                ))}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">인강용</div>\r\n                            <div className=\"goods_des_value\">\r\n                              인터넷 강의 용으로{\" \"}\r\n                              {notebook.laptop_info_list.internet_lecture_usage}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">게임용</div>\r\n                            <div className=\"goods_des_value\">\r\n                              {notebook.laptop_info_list.gaming_usage}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain_hardware\">\r\n                            <div className=\"goods_des_title\">하드웨어</div>\r\n                            <div className=\"goods_des_value_hardware\">\r\n                              {notebook.hardware\r\n                                .split(\",\")\r\n                                .map((props, index) => (\r\n                                  <div key={index}>\r\n                                    <span>{props}</span>\r\n                                    <br />\r\n                                  </div>\r\n                                ))}\r\n                            </div>\r\n                          </div>\r\n                          <img\r\n                            className=\"goods_notebook_rank\"\r\n                            src={`/img/rating/${notebook.rank}.png`}\r\n                            alt=\"rankimage\"\r\n                          ></img>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </NavLink>\r\n                ))}\r\n            </div>\r\n            {!props.error ? (\r\n              <Page\r\n                itemlen={itemlen}\r\n                searchParams={props.searchParams}\r\n                setSearchParams={props.setSearchParams}\r\n                searchparamshandler={props.searchparamshandler}\r\n                itemcount={6}\r\n              ></Page>\r\n            ) : (\r\n              <Page\r\n                itemlen={1}\r\n                searchParams={props.searchParams}\r\n                setSearchParams={props.setSearchParams}\r\n                searchparamshandler={props.searchparamshandler}\r\n                itemcount={6}\r\n              ></Page>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Goods;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Routes, useSearchParams } from \"react-router-dom\";\r\nimport Goods from \"./Goods\";\r\nimport Goodsview from \"./Goodsview\";\r\nimport { useHttpClient } from \"../components/Goods-http-hook\"; //api호출 훅 불러오기\r\n\r\nconst Goodsroute = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const searchparamshandler = (sort, value) => {\r\n    //쿼리 생성 및 변경\r\n    searchParams.set(`${sort}`, `${value}`);\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  const { isLoading, sendRequest, setIsLoading } = useHttpClient();\r\n  const [loadedGoods, setLoadedGoods] = useState([]);\r\n  const [totalcount, setTotalcount] = useState(100);\r\n  const [error, setError] = useState();\r\n  const currentPath = window.location.pathname;\r\n  useEffect(() => {\r\n    setError();\r\n    const fetchgoods = async (event) => {\r\n      try {\r\n        const { responseData, total_count } = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/purchase/goods/${\r\n            searchParams.get(\"price\") ? searchParams.get(\"price\") : \"asc\"\r\n          }?${\r\n            searchParams.get(\"page\") ? `page=${searchParams.get(\"page\")}` : \"\"\r\n          }${\r\n            searchParams.get(\"rating\") && searchParams.get(\"rating\") != \"\"\r\n              ? `&rating=${searchParams.get(\"rating\")}`\r\n              : \"\"\r\n          }`\r\n        );\r\n\r\n        setTotalcount(total_count);\r\n        setLoadedGoods(responseData);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n    if (currentPath === \"/main/goods\") {\r\n      fetchgoods();\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          element={\r\n            <Goods\r\n              isLoading={isLoading}\r\n              loadedGoods={loadedGoods}\r\n              searchParams={searchParams}\r\n              setSearchParams={setSearchParams}\r\n              searchparamshandler={searchparamshandler}\r\n              totalcount={totalcount}\r\n              error={error}\r\n            />\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:goodsNo\"\r\n          exact\r\n          element={\r\n            <Goodsview\r\n              isLoading={isLoading}\r\n              loadedGoods={loadedGoods}\r\n              searchParams={searchParams}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Goodsroute;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        const total_count = await response.headers.get(\"Total_count\");\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return { responseData, total_count };\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, sendRequest, setIsLoading };\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Imgslide.css\";\r\n\r\nconst Imgslide = (props) => {\r\n  const images = props.statusimg;\r\n  const [page, setPage] = useState(0);\r\n  const pageplus = () => {\r\n    if (page < images.length - 4) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n  const pageminus = () => {\r\n    if (page >= 1) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"imgslide\">\r\n      <img\r\n        src=\"/img/goodsview/Left.png\"\r\n        className=\"imgslide_arrow\"\r\n        alt=\"leftarrow\"\r\n        onClick={pageminus}\r\n      ></img>\r\n      {images.map(\r\n        (image, index) =>\r\n          page + 4 > index &&\r\n          index >= page && (\r\n            <img\r\n              key={index}\r\n              src={image}\r\n              className=\"imgslide_img\"\r\n              alt=\"imgslideimg\"\r\n              onClick={() => {\r\n                props.setMainImg(image);\r\n              }}\r\n            ></img>\r\n          )\r\n      )}\r\n      <img\r\n        src=\"/img/goodsview/Right.png\"\r\n        className=\"imgslide_arrow\"\r\n        alt=\"leftarrow\"\r\n        onClick={pageplus}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Imgslide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Goodsview.css\";\r\nimport Pagetitle from \"../../shared/Pagetitle/Pagetitle\";\r\nimport Imgslide from \"../components/Imgslide\";\r\nimport Modal from \"../../shared/UIElements/Modal\";\r\n\r\nconst Goodsview = (props) => {\r\n  const { goodsNo } = useParams();\r\n  const isLoading = props.isLoading;\r\n  const loadedGoods = props.loadedGoods.filter(\r\n    (item) => item.laptop_info_list_id === parseInt(goodsNo)\r\n  );\r\n  const imagePaths =\r\n    loadedGoods.length > 0\r\n      ? loadedGoods[0].laptop_info_list.laptop_info_list_image\r\n          .map((image) => image.path)\r\n          .reverse()\r\n      : [];\r\n\r\n  const [mainImg, setMainImg] = useState(\"\");\r\n  useEffect(() => {\r\n    if (\r\n      loadedGoods.length > 0 &&\r\n      loadedGoods[0].laptop_info_list.laptop_info_list_image.length > 0 &&\r\n      !mainImg\r\n    ) {\r\n      setMainImg(\r\n        loadedGoods[0].laptop_info_list.laptop_info_list_image[\r\n          loadedGoods[0].laptop_info_list.laptop_info_list_image.length - 1\r\n        ].path\r\n      );\r\n    }\r\n  }, [loadedGoods]);\r\n\r\n  // console.log(imagePaths);\r\n  const [showbasket, setShowBasket] = useState(false);\r\n  const [showpurchase, setShowPurchase] = useState(false);\r\n  const closebasket = () => {\r\n    setShowBasket(false);\r\n  };\r\n  const openbasket = () => {\r\n    setShowBasket(true);\r\n  };\r\n  const closepurchase = () => {\r\n    setShowPurchase(false);\r\n  };\r\n  const openpurchase = () => {\r\n    setShowPurchase(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0); // 페이지 렌더링 시 맨 위로 스크롤\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoading && loadedGoods[0] && (\r\n        <div className=\"goodsview\">\r\n          <Modal\r\n            show={showpurchase}\r\n            onCancel={closepurchase}\r\n            className=\"goodsview_modal\"\r\n          >\r\n            <div className=\"good_modal_box\">\r\n              <img\r\n                className=\"goodsview_modal_cancle\"\r\n                src=\"/img/modal/Cancle.png\"\r\n                alt=\"modalcancle\"\r\n                onClick={closepurchase}\r\n              />\r\n              <img\r\n                className=\"goodsview_modal_img\"\r\n                src=\"/img/goodsview/Default.png\"\r\n                alt=\"modaldefault\"\r\n              />\r\n              <a className=\"goodsview_modal_text\">구매가 완료되었습니다!</a>\r\n              <button\r\n                className=\"goodsview_modal_button\"\r\n                onClick={closepurchase}\r\n              >\r\n                확인\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            show={showbasket}\r\n            onCancel={closebasket}\r\n            className=\"goodsview_modal\"\r\n          >\r\n            <div className=\"good_modal_box\">\r\n              <img\r\n                className=\"goodsview_modal_cancle\"\r\n                src=\"/img/modal/Cancle.png\"\r\n                alt=\"modalcancle\"\r\n                onClick={closebasket}\r\n              />\r\n              <img\r\n                className=\"goodsview_modal_img\"\r\n                src=\"/img/goodsview/Smile.png\"\r\n                alt=\"modalsmile\"\r\n              />\r\n              <a\r\n                className=\"goodsview_modal_text\"\r\n                style={{ marginTop: \"0.5rem\" }}\r\n              >\r\n                장바구니에 상품이 담겼습니다!\r\n              </a>\r\n              <div className=\"center\">\r\n                <button\r\n                  className=\"goodsview_modal_button\"\r\n                  onClick={closebasket}\r\n                  style={{\r\n                    color: \"#759CFF\",\r\n                    background: \"#FAFBFF\",\r\n                    border: \"solid 0.5px #759cff\",\r\n                  }}\r\n                >\r\n                  장바구니로 가기\r\n                </button>\r\n                <button\r\n                  className=\"goodsview_modal_button\"\r\n                  onClick={closebasket}\r\n                  style={{ marginLeft: \"0.5rem\" }}\r\n                >\r\n                  쇼핑 계속하기\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n          <Pagetitle title=\"구매하기\">\r\n            판매자들의 노트북을 구매할 수 있습니다\r\n          </Pagetitle>\r\n          <div className=\"goodsview_contain\">\r\n            <div className=\"goodsview_imgcontain\">\r\n              <div className=\"goodsview_img_mainbox center\">\r\n                {loadedGoods[0].laptop_info_list.laptop_info_list_image.length >\r\n                0 ? (\r\n                  <img\r\n                    className=\"goodsview_img_main\"\r\n                    src={mainImg}\r\n                    alt=\"goodsviewmainimg\"\r\n                  />\r\n                ) : (\r\n                  <div>No Image Available</div>\r\n                )}\r\n              </div>\r\n              <img\r\n                src={`/img/rating/${loadedGoods[0].rank}.png`}\r\n                className=\"goodsview_rank\"\r\n                alt=\"goodsviewrank\"\r\n              ></img>\r\n\r\n              <Imgslide statusimg={imagePaths} setMainImg={setMainImg} />\r\n            </div>\r\n            <div className=\"goodsview_descontain\">\r\n              <div className=\"goodsview_des_name\">\r\n                [{loadedGoods[0].title}]\r\n                {loadedGoods[0].laptop_info_list.device_name}\r\n                <div className=\"goodsview_mobile_price\">\r\n                  <a\r\n                    style={{\r\n                      fontWeight: \"700\",\r\n                      fontSize: \"0.875rem\",\r\n                      color: \"#4f80ff\",\r\n                    }}\r\n                  >\r\n                    {loadedGoods[0].price_time_sale\r\n                      .toString()\r\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    원\r\n                  </a>\r\n                  <a\r\n                    style={{\r\n                      marginLeft: \"0.3125rem\",\r\n                      fontWeight: \"400\",\r\n                      fontSize: \"0.75rem\",\r\n                      color: \"#999999\",\r\n                      textDecoration: \"line-through\",\r\n                    }}\r\n                  >\r\n                    {loadedGoods[0].price\r\n                      .toString()\r\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                    원\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">짧은 내용</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].hashtag\r\n                    .split(\",\")\r\n                    .map((des, index) => `#${des} `)}\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">정가</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].price\r\n                    .toString()\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  원\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">타임세일가</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].price_time_sale\r\n                    .toString()\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  원\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">구매제한</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].laptop_info_list.purchase_limit}개\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">배송비</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].laptop_info_list.delivery_fee}/택배\r\n                </a>\r\n              </div>\r\n\r\n              {/* <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">상품코드</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].laptop_info_list.product_code}\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">자체상품코드</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].laptop_info_list.own_product_code}\r\n                </a>\r\n              </div> */}\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">브랜드</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].laptop_info_list.brand}\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">제조사</a>\r\n                <a className=\"goodsview_des_text_value\">\r\n                  {loadedGoods[0].laptop_info_list.manufacturing_company}\r\n                </a>\r\n              </div>\r\n\r\n              {/* <div className=\"goodsview_des_text\">\r\n                <a className=\"goodsview_des_text_key\">상품재고</a>\r\n                <a className=\"goodsview_des_text_value\">개</a>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"goodsview_price-btn\">\r\n            <div className=\"goodsview_pricecontain\">\r\n              <div className=\"goodsview_pricebox\">\r\n                <a className=\"goodsview_price_text\">총 상품금액</a>\r\n                <a className=\"goodsview_price_price1\">\r\n                  {loadedGoods[0].price_time_sale\r\n                    .toString()\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  원\r\n                </a>\r\n              </div>\r\n              <hr className=\"goodsview_price_hr\"></hr>\r\n              <div\r\n                className=\"goodsview_pricebox\"\r\n                style={{ height: \"2.1875rem\" }}\r\n              >\r\n                <a\r\n                  className=\"goodsview_price_text\"\r\n                  style={{ color: \"#4F80FF\" }}\r\n                >\r\n                  총 합계금액\r\n                </a>\r\n                <a className=\"goodsview_price_price2\">\r\n                  {loadedGoods[0].price_time_sale\r\n                    .toString()\r\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  원\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"goodsview_btncontain\">\r\n              <button className=\"goodsview_btn\" onClick={openbasket}>\r\n                장바구니\r\n              </button>\r\n              <button\r\n                className=\"goodsview_btn\"\r\n                style={{ color: \"#ffffff\", background: \"#4f80ff\" }}\r\n                onClick={openpurchase}\r\n              >\r\n                바로구매\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Goodsview;\r\n","import React from \"react\";\r\nimport \"./Pagetitle.css\";\r\n\r\nconst Pagetitle = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={`pagetitle_title center ${props.className}`}>\r\n        {props.title}\r\n      </div>\r\n      <div className={`pagetitle_guide center ${props.className}`}>\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagetitle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      className={`backdrop ${props.className}`}\r\n      onClick={props.onClick}\r\n    ></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={`card ${props.className}`}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport \"./Filter.css\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Filter = (props) => {\r\n  let pricecheck = false;\r\n  if (props.title === \"낮은가격순\") {\r\n    pricecheck = true;\r\n  }\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const searchparamshandler = (sort, value) => {\r\n    //쿼리 생성\r\n    searchParams.set(`${sort}`, `${value}`);\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  const [showFilter, setShowFilter] = useState(false); //필터 활성화,비활성화\r\n  const closefilter = () => {\r\n    setShowFilter(false);\r\n  };\r\n  const openfilter = () => {\r\n    setShowFilter(true);\r\n    filtercancle();\r\n  };\r\n\r\n  const pricearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 price 메뉴 체크\r\n  const [priceIndex, setPriceIndex] = useState(\r\n    searchParams.get(\"price\") === null\r\n      ? 0\r\n      : parseInt(pricearray.indexOf(searchParams.get(\"price\")))\r\n  );\r\n\r\n  const datearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 date 메뉴 체크\r\n  const [dateIndex, setDateIndex] = useState(\r\n    searchParams.get(\"date\") === null\r\n      ? 0\r\n      : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n  );\r\n\r\n  // const namearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 name 메뉴 체크\r\n  // const [nameIndex, setNameIndex] = useState(\r\n  //   searchParams.get(\"name\") === null\r\n  //     ? 0\r\n  //     : parseInt(namearray.indexOf(searchParams.get(\"name\")))\r\n  // );\r\n\r\n  const ratingarray = [\"\", \"ss\", \"s\", \"a\", \"b\", \"c\"]; //쿼리에 따라 rank 메뉴 체크\r\n  const [ratingIndex, setRatingIndex] = useState(\r\n    searchParams.get(\"rating\") === null\r\n      ? 0\r\n      : parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n  );\r\n\r\n  const [filter, setFilter] = useState({\r\n    //filter 내용 초기값 지정\r\n    rating: `${\r\n      searchParams.get(\"rating\") === null\r\n        ? \"\"\r\n        : ratingarray[parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))]\r\n    }`,\r\n    ...(pricecheck\r\n      ? {\r\n          price: `${\r\n            searchParams.get(\"price\") === null\r\n              ? \"asc\"\r\n              : datearray[\r\n                  parseInt(datearray.indexOf(searchParams.get(\"price\")))\r\n                ]\r\n          }`,\r\n        }\r\n      : {\r\n          date: `${\r\n            searchParams.get(\"date\") === null\r\n              ? \"desc\"\r\n              : datearray[parseInt(datearray.indexOf(searchParams.get(\"date\")))]\r\n          }`,\r\n          // name: `${\r\n          //   searchParams.get(\"name\") === null\r\n          //     ? \"asc\"\r\n          //     : namearray[parseInt(namearray.indexOf(searchParams.get(\"name\")))]\r\n          // }`,\r\n        }),\r\n  });\r\n  const filtersave = () => {\r\n    //저장하기 클릭 시 filter에 따른 쿼리 생성\r\n    for (const key in filter) {\r\n      searchparamshandler(`${key}`, `${filter[key]}`);\r\n      searchparamshandler(`page`, 1);\r\n    }\r\n  };\r\n  const filtercancle = () => {\r\n    //취소하기 선택 시 선택 된 버튼과 filter값 초기화\r\n    setDateIndex(\r\n      searchParams.get(\"date\") === null\r\n        ? 0\r\n        : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n    );\r\n    // setNameIndex(\r\n    //   searchParams.get(\"date\") === null\r\n    //     ? 0\r\n    //     : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n    // );\r\n    setRatingIndex(\r\n      searchParams.get(\"rating\") === null\r\n        ? 0\r\n        : parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n    );\r\n\r\n    if (pricecheck) {\r\n      setPriceIndex(\r\n        searchParams.get(\"price\") === null\r\n          ? 0\r\n          : parseInt(pricearray.indexOf(searchParams.get(\"price\")))\r\n      );\r\n    }\r\n\r\n    setFilter({\r\n      rating: `${\r\n        searchParams.get(\"rating\") === null\r\n          ? \"\"\r\n          : ratingarray[\r\n              parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n            ]\r\n      }`,\r\n      ...(pricecheck\r\n        ? {\r\n            price: `${\r\n              searchParams.get(\"price\") === null\r\n                ? \"asc\"\r\n                : datearray[\r\n                    parseInt(datearray.indexOf(searchParams.get(\"price\")))\r\n                  ]\r\n            }`,\r\n          }\r\n        : {\r\n            date: `${\r\n              searchParams.get(\"date\") === null\r\n                ? \"all\"\r\n                : datearray[\r\n                    parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n                  ]\r\n            }`,\r\n            // name: `${\r\n            //   searchParams.get(\"name\") === null\r\n            //     ? \"all\"\r\n            //     : namearray[\r\n            //         parseInt(namearray.indexOf(searchParams.get(\"name\")))\r\n            //       ]\r\n            // }`,\r\n          }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal show={showFilter} onCancel={closefilter} className=\"filter-modal\">\r\n        <div className=\"filter-modal_title\">\r\n          <div className=\"filter-modal_title_text\">필터</div>\r\n          <img\r\n            className=\"filter-modal_title_cancle\"\r\n            src=\"/img/modal/Cancle.png\"\r\n            alt=\"Cancle\"\r\n            onClick={closefilter}\r\n          />\r\n        </div>\r\n        {pricecheck && (\r\n          <>\r\n            <div className=\"filter-modal_date\">가격</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"asc\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    priceIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    setPriceIndex(index);\r\n                    setFilter((prev) => ({ ...prev, price: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        {!pricecheck && (\r\n          <>\r\n            <div\r\n              className={pricecheck ? \"filter-modal_name\" : \"filter-modal_date\"}\r\n            >\r\n              날짜\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"all\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    dateIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    setDateIndex(index);\r\n                    setFilter((prev) => ({ ...prev, date: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {/* <div className=\"filter-modal_name\">이름</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"all\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    nameIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    // setNameIndex(index);\r\n                    setFilter((prev) => ({ ...prev, name: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div> */}\r\n          </>\r\n        )}\r\n\r\n        <div className=\"filter-modal_name\">등급</div>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", width: \"14rem\" }}>\r\n          {[\r\n            [\"전체\", \"\"],\r\n            [\"SS\", \"ss\"],\r\n            [\"S\", \"s\"],\r\n            [\"A\", \"a\"],\r\n            [\"B\", \"b\"],\r\n            [\"C\", \"c\"],\r\n          ].map((menu, index) => (\r\n            <div\r\n              key={index}\r\n              className={`filter-modal_menu center ${\r\n                ratingIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n              }`}\r\n              onClick={() => {\r\n                setRatingIndex(index);\r\n                setFilter((prev) => ({ ...prev, rating: `${menu[1]}` }));\r\n              }}\r\n            >\r\n              {menu[0]}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div\r\n            className=\"filter-modal_savebtn center\"\r\n            onClick={() => {\r\n              closefilter();\r\n              filtersave();\r\n            }}\r\n          >\r\n            저장하기\r\n          </div>\r\n          <div\r\n            className=\"filter-modal_canclebtn center\"\r\n            onClick={() => {\r\n              filtercancle();\r\n              closefilter();\r\n            }}\r\n          >\r\n            취소\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <img\r\n        className=\"filterimg\"\r\n        src=\"/img/rating/Filter.png\"\r\n        alt=\"filterimage\"\r\n      ></img>\r\n      <div className=\"filter\" onClick={openfilter}>\r\n        {props.title}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport Card from \"./Card\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && (\r\n        <Backdrop onClick={props.onCancel} className={props.Backdropclass} />\r\n      )}\r\n      {props.detail && (\r\n        <div className=\"backdrop_double\" onClick={props.onCancel} />\r\n      )}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200} // 200ms 동안 트랜지션 지속\r\n        classNames=\"modal\"\r\n      >\r\n        <>\r\n          <Card className={`modal ${props.className}`}>{props.children}</Card>\r\n          {props.detail && (\r\n            <div className=\"slide_modal_container \">\r\n              <img\r\n                src=\"/img/admin/Left_arrow.png\"\r\n                alt=\"left_arrow\"\r\n                className=\"modal_arrow_detail\"\r\n              />\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.front)}\r\n              >\r\n                <img\r\n                  src={props.front}\r\n                  alt=\"front\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.back)}\r\n              >\r\n                <img\r\n                  src={props.back}\r\n                  alt=\"back\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.keyboard)}\r\n              >\r\n                <img\r\n                  src={props.keyboard}\r\n                  alt=\"keyboard\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.monitor)}\r\n              >\r\n                <img\r\n                  src={props.monitor}\r\n                  alt=\"monitor\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <img\r\n                src=\"/img/admin/Right_arrow.png\"\r\n                alt=\"left_arrow\"\r\n                className=\"modal_arrow_detail\"\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Page.css\";\r\n\r\nconst Page = (props) => {\r\n  const searchParams = props.searchParams;\r\n  const setSearchParams = props.setSearchParams;\r\n  const searchparamshandler = props.searchparamshandler;\r\n  const page = Math.ceil(props.itemlen / props.itemcount); //데이터 총 개수에 따라 페이지 계산\r\n  const pagearray = [];\r\n  for (let i = 1; i < page + 1; i++) {\r\n    pagearray.push(i);\r\n  }\r\n  const [pageindex, setPageIndex] = useState(\r\n    searchParams.get(\"page\") === null\r\n      ? 0\r\n      : parseInt(pagearray.indexOf(parseInt(searchParams.get(\"page\")))) //쿼리에 따라 페이지 체크\r\n  );\r\n  const pageplus = () => {\r\n    //페이지 증가\r\n    if (pageindex === page - 1) {\r\n      setPageIndex(pageindex);\r\n    } else {\r\n      setPageIndex(pageindex + 1);\r\n      searchParams.set(\"page\", `${pageindex + 2}`);\r\n      setSearchParams(searchParams);\r\n    }\r\n  };\r\n  const pageminus = () => {\r\n    //페이지 감소\r\n    if (pageindex === 0) {\r\n      setPageIndex(0);\r\n    } else {\r\n      setPageIndex(pageindex - 1);\r\n      searchParams.set(\"page\", `${pageindex}`);\r\n      setSearchParams(searchParams);\r\n    }\r\n  };\r\n\r\n  const [pagecut, setPagecut] = useState(0); //페이지를 5단위로 체크하고 변경\r\n  useEffect(() => {\r\n    if (pageindex > pagecut + 4) {\r\n      setPagecut(pagecut + 5);\r\n    } else if (pageindex < pagecut) {\r\n      setPagecut(pagecut - 5);\r\n    }\r\n  }, [pageindex, pagecut]);\r\n\r\n  return (\r\n    <div className=\"page center\">\r\n      <img\r\n        className=\"page_arrow\"\r\n        src=\"/img/rating/leftarrow.png\"\r\n        onClick={pageminus}\r\n        alt=\"pagearrow\"\r\n      />\r\n      <div className=\"page_num_contain center\">\r\n        {/*페이지 표시*/}\r\n        {page < 5\r\n          ? pagearray.map((page, index) => (\r\n              <div\r\n                key={index}\r\n                className={`page_num center ${\r\n                  pageindex === index ? \" page_num_active\" : \"\"\r\n                }`}\r\n                onClick={() => {\r\n                  setPageIndex(index);\r\n                  searchparamshandler(\"page\", `${index + 1}`);\r\n                }}\r\n              >\r\n                {page}\r\n              </div>\r\n            ))\r\n          : pagearray.map((page, index) => {\r\n              return (\r\n                index >= pagecut &&\r\n                index <= 4 + pagecut && (\r\n                  <div\r\n                    key={index}\r\n                    className={`page_num center ${\r\n                      pageindex === index ? \" page_num_active\" : \"\"\r\n                    }`}\r\n                    onClick={() => {\r\n                      setPageIndex(index);\r\n                      searchparamshandler(\"page\", `${index + 1}`);\r\n                    }}\r\n                  >\r\n                    {page}\r\n                  </div>\r\n                )\r\n              );\r\n            })}\r\n      </div>\r\n      <img\r\n        className=\"page_arrow\"\r\n        src=\"/img/rating/rightarrow.png\"\r\n        onClick={pageplus}\r\n        alt=\"pagearrow\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["props","isLoading","loadedGoods","itemlen","totalcount","_jsx","React","children","_Fragment","_jsxs","className","Pagetitle","title","Filter","error","map","notebook","index","NavLink","to","concat","laptop_info_list_id","style","textDecoration","laptop_info_list","laptop_info_list_image","length","src","path","alt","device_name","price_time_sale","toString","replace","price","os","screen_size","business_usage","split","img","internet_lecture_usage","gaming_usage","hardware","rank","Page","searchParams","setSearchParams","searchparamshandler","itemcount","Goodsroute","useSearchParams","sendRequest","setIsLoading","useHttpClient","useState","activeHttpRequests","useRef","useCallback","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","total_count","get","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","setLoadedGoods","setTotalcount","setError","currentPath","window","location","pathname","process","fetchgoods","Routes","Route","exact","element","Goods","sort","value","set","Goodsview","images","statusimg","page","setPage","onClick","pageminus","image","setMainImg","pageplus","goodsNo","useParams","item","parseInt","imagePaths","reverse","mainImg","showbasket","setShowBasket","showpurchase","setShowPurchase","closebasket","closepurchase","scrollTo","Modal","show","onCancel","marginTop","color","background","border","marginLeft","Imgslide","fontWeight","fontSize","hashtag","des","purchase_limit","delivery_fee","brand","manufacturing_company","height","openbasket","openpurchase","ReactDOM","document","getElementById","pricecheck","showFilter","setShowFilter","closefilter","pricearray","priceIndex","setPriceIndex","indexOf","datearray","dateIndex","setDateIndex","ratingarray","ratingIndex","setRatingIndex","setFilter","rating","date","filtercancle","display","menu","prev","flexWrap","width","filtersave","key","openfilter","Backdrop","Backdropclass","detail","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Card","onImageClick","front","back","keyboard","monitor","Math","ceil","pagearray","i","pageindex","setPageIndex","pagecut","setPagecut"],"sourceRoot":""}