{"version":3,"file":"static/js/805.542e554a.chunk.js","mappings":"yJAAA,MAAMA,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QACvBC,EAA2B,YAC3BC,EAAuB,QAEvBC,EAA0B,WAInBC,EAAuBC,IAAG,CACrCC,KAAMR,EACNO,IAAKA,IAUME,EAAkBA,KAAA,CAASD,KAAMJ,IAGjCM,EAAWA,CAACC,EAAOC,KAC9B,IAAIC,GAAU,EACd,IAAK,MAAMC,KAAaF,EAyBtB,GAxBIE,EAAUN,OAAST,IACrBc,EAAUA,GAAWF,EAAMI,OAAOC,OAAS,GAEzCF,EAAUN,OAASR,IACrBa,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUP,KAEpDO,EAAUN,OAASP,IACrBY,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUP,KAnCjC,QAqCnBO,EAAUN,OACZK,EAAUA,IAAYF,GAASG,EAAUP,KArCpB,QAuCnBO,EAAUN,OACZK,EAAUA,IAAYF,GAASG,EAAUP,KAEvCO,EAAUN,OAASN,IACrBW,EAAUA,GAAW,iBAAiBI,KAAKN,IAEzCG,EAAUN,OAASL,IACrBU,EAAUA,GAAW,wBAAwBI,KAAKN,IAEhDG,EAAUN,OAASJ,IACrBS,EAAUA,GAAW,WAAWI,KAAKN,IAEnCG,EAAUN,OAASH,EAAyB,CAC9C,MAMMa,EADiB,CALL,QAAQD,KAAKN,GACb,QAAQM,KAAKN,GAChB,KAAKM,KAAKN,GACL,YAAYM,KAAKN,IAGMQ,QAAQX,GAASA,IAAMQ,OAElEH,EACEA,GACAK,GAAuB,GACvB,4BAA4BD,KAAKN,EACrC,CAEF,OAAOE,CAAO,E,wBCzDhB,MAgKA,EAhKoBO,IAClB,MAAM,UAAEC,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MAE/CC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,CACvCK,QAAQ,EACRC,MAAM,KAEDC,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,CACzCK,OAAQ,GACRI,MAAO,KAGHC,EAAQA,CAACC,EAAGzB,EAAW0B,KAC3B,MAAM7B,EAAQ4B,EAAEE,OAAO9B,MAEvB6B,EADgB9B,EAASC,EAAO,CAACG,IAChB,EA2DnB,OACE4B,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBF,SAAC,2CACpCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,6BAA4BF,SAAA,EACzCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,2CAC3CF,EAAAA,EAAAA,MAAA,OAAKK,MAAO,CAAEC,QAAS,QAASJ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEC,UAAU,6BACVG,SAAWV,IACTD,EAAMC,EAAG9B,IAAmBkB,GAC5BS,EAAa,IAAKD,EAAWE,MAAOE,EAAEE,OAAO9B,OAAQ,EAEvDoC,MAAO,CACLG,YAAcxB,EAAuB,GAAZ,cAG7BmB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,0BAA0BK,QAhEtCC,UACd,UAC6B7B,EAAY,GAAD8B,OACjCC,4BAAiC,SACpC,OACAC,KAAKC,UAAU,CAAEnB,MAAOF,EAAUE,QAClC,CACE,eAAgB,mBAChBoB,MAAM,GAADJ,OAAKK,aAAaC,QAAQ,kBAGnC3B,EAAY,IACPD,EACHE,QAAQ,EACRC,MAAM,IAER0B,MAAM,6EACR,CAAE,MAAOC,GACPD,MAAM,2FACNjC,GAAY,EACd,GA4CqEiB,SAAC,iCAIhEC,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQpC,EAAuB,GAAZ,WAAiBkB,SAE5C,4HAILF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,8BAC3CF,EAAAA,EAAAA,MAAA,OAAKK,MAAO,CAAEC,QAAS,QAASJ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEC,UAAU,6BACVG,SAAWV,IACTD,EAAMC,EAAGjC,EAAoB,GAAIwB,GACjCM,EAAa,IAAKD,EAAWF,OAAQM,EAAEE,OAAO9B,OAAQ,EAExDoC,MAAO,CACLG,YAAcrB,EAAwB,GAAZ,WAE5BkC,SAAUhC,EAASG,QAErBW,EAAAA,EAAAA,KAAA,UACEC,UAAU,0BACVK,QAAUZ,IAtEPa,WACb,UAC6B7B,EAAY,GAAD8B,OACjCC,4BAAiC,WACpC,OACAC,KAAKC,UAAU,CAAEnB,MAAOF,EAAUE,MAAO2B,SAAU7B,EAAUF,SAC7D,CACE,eAAgB,qBAGpBD,EAAY,IACPD,EACHG,MAAM,IAER0B,MAAM,6EACR,CAAE,MAAOC,GACP7B,EAAY,IACPD,EACHG,MAAM,IAER0B,MAAM,qFACN9B,GAAa,EACf,GAiDYmC,EAAQ,EACRrB,SACH,qBAIHC,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQjC,EAAwB,GAAZ,WAAiBe,SAE7C,8FAIPF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,yBAAwBF,SAAA,EACrCC,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVK,QAASA,IAAMe,OAAOC,QAAQC,OAAOxB,SACtC,8BAGDC,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVC,MAAO,CACLsB,WAAY,SACZC,WAAY,UACZC,OAAQ,OACRT,MAAO,WAETX,QAnIkBqB,KAEtBC,OAAOC,OAAO3C,GAAU4C,OAAOhE,IAAoB,IAAVA,KACzC8D,OAAOC,OAAOvC,GAAWwC,OAAOhE,GAAoB,KAAVA,KAE1CS,EAAMwD,cAAa,EACrB,EA6HiChC,SAC5B,sDAIY,E,cC3JrB,MAkVA,EAlVmBiC,KACjB,MAAM,UAAExD,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,KAEhDqD,GAAWC,EAAAA,EAAAA,OAEVC,EAAeC,IAAoBrD,EAAAA,EAAAA,WAAS,IAC5CsD,EAAWC,IAAgBvD,EAAAA,EAAAA,UAAS,IASpCwD,EAAOC,IAAYzD,EAAAA,EAAAA,WAAS,IAC5B0D,EAAOC,IAAY3D,EAAAA,EAAAA,WAAS,IAC5B4D,EAAYC,IAAiB7D,EAAAA,EAAAA,WAAS,IACtC8D,EAASC,IAAc/D,EAAAA,EAAAA,WAAS,IAChCgE,EAAUC,IAAejE,EAAAA,EAAAA,WAAS,IAClCF,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,CACvCkE,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,IAAI,EACJC,OAAO,EACP7D,OAAO,KAEFF,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,CACzCkE,KAAM,GACNC,GAAI,GACJC,QAAS,GACTC,GAAI,GACJC,MAAO,GACP7D,MAAO,MAEF8D,EAASC,IAAcxE,EAAAA,EAAAA,aAC9ByE,EAAAA,EAAAA,YAAU,KAkBR,SAASC,IACHpC,OAAOqC,WAAa,IACtBtB,GAAiB,GAEjBA,GAAiB,EAErB,CAKA,MA3BmB7B,WACjB,IACE,MAAMoD,QAAqBjF,EAAY,GAAD8B,OACjCC,4BAAiC,aACpC,MACA,KACA,CACEG,MAAM,GAADJ,OAAKK,aAAaC,QAAQ,wBAI7ByC,EAAWI,EAAaC,SAChC,CAAE,MAAO5C,GAAM,GAEjB6C,GASAJ,IAEApC,OAAOyC,iBAAiB,SAAUL,GAE3B,KACLpC,OAAO0C,oBAAoB,SAAUN,EAAa,CACnD,GACA,IAEH,MAAMhE,EAAQA,CAACC,EAAGzB,EAAW0B,KAC3B,MAAM7B,EAAQ4B,EAAEE,OAAO9B,MAEvB6B,EADgB9B,EAASC,EAAO,CAACG,IAChB,GAGnBuF,EAAAA,EAAAA,YAAU,KACRZ,EAActD,EAAU4D,KAAO5D,EAAU6D,QAAQ,GAChD,CAAC7D,IAqEJ,OAxDAkE,EAAAA,EAAAA,YAAU,KACFF,GACJ/D,EAAa,CACX0D,KAAMK,EAAQU,SACdd,GAAI,GACJC,QAAS,GACTC,GAAIE,EAAQF,GACZC,MAAOC,EAAQD,MACf7D,MAAO8D,EAAQW,aAEnB,GACC,CAACX,KACJE,EAAAA,EAAAA,YAAU,KACR,GACErB,GACc,IAAdE,GACAnD,EAASkE,IACTlE,EAASgE,IACThE,EAASiE,SACQ,KAAjB7D,EAAU8D,IACO,KAAjB9D,EAAU4D,IACY,KAAtB5D,EAAU6D,QAEVb,EAAa,QAGf,GACEV,OAAOC,OAAO3C,GAAU4C,OAAOhE,IAAoB,IAAVA,KACzC8D,OAAOC,OAAOvC,GAAWwC,OAAOhE,GAAoB,KAAVA,IAC1C,CAGmByC,WACjB,UAC6B7B,EAAY,GAAD8B,OACjCC,4BAAiC,aACpC,QACAC,KAAKC,UAAU,CACbuD,SAAU5E,EAAU4D,GACpBc,SAAU1E,EAAU2D,KACpBI,MAAO/D,EAAU+D,MACjBY,YAAa3E,EAAUE,MACvB2E,YAAa,6BAEf,CACE,eAAgB,mBAChBvD,MAAM,GAADJ,OAAKK,aAAaC,QAAQ,wBAG7BmB,EAAS,IACjB,CAAE,MAAOjB,GAAM,GAEjBoD,EACF,IACC,CAAClF,KAGFc,EAAAA,EAAAA,KAACF,EAAAA,SAAc,CAAAC,UACXvB,GAAa8E,IACbzD,EAAAA,EAAAA,MAAAwE,EAAAA,SAAA,CAAAtE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEC,UAAU,kBACVqE,IAAI,0BACJC,IAAI,eAGN1E,EAAAA,EAAAA,MAAA,OAAKI,UAAU,6BAA4BF,SAAA,EACzCF,EAAAA,EAAAA,MAAA,OACEI,UAAU,eACVC,MAAO,CACLC,QAASgC,GAA+B,IAAdE,EAAkB,OAAS,SACrDtC,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,wBAC3CC,EAAAA,EAAAA,KAAA,SACEC,UAAU,4BACVC,MAAO,CAAEG,YAAckC,EAAoB,GAAZ,WAC/BnC,SAAWV,IACTD,EAAMC,EAAGjC,EAAoB,GAAI+E,GACjCjD,EAAa,IAAKD,EAAW8D,GAAI1D,EAAEE,OAAO9B,OAAQ,EAEpD0G,YAAY,iEACZ1G,MAAOwB,EAAU8D,MAEnBpD,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQsB,EAAoB,GAAZ,WAAiBxC,UAExCwC,GAAS,kGAIf1C,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,8BAC3CC,EAAAA,EAAAA,KAAA,SACErC,KAAK,WACLsC,UAAU,4BACVC,MAAO,CAAEG,YAAcoC,EAAoB,GAAZ,WAC/BrC,SAAWV,IACTD,EAAMC,EFrLQ,CAAS/B,KAAMH,GEqLEkF,GAC/BnD,EAAa,IAAKD,EAAW4D,GAAIxD,EAAEE,OAAO9B,OAAQ,EAEpD0G,YAAY,0EAEdxE,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQwB,EAAoB,GAAZ,WAAiB1C,UAExC0C,GACA,kPAIN5C,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,2CAC3CC,EAAAA,EAAAA,KAAA,SACErC,KAAK,WACLsC,UAAU,4BACVC,MAAO,CAAEG,YAAcsC,EAAyB,GAAZ,WACpCvC,SAAWV,IACTH,EAAa,IAAKD,EAAW6D,QAASzD,EAAEE,OAAO9B,OAAQ,EAEzD0G,YAAY,0EAEdxE,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQ0B,EAAyB,GAAZ,WAAiB5C,UAE7C4C,GAAc,oEAItB9C,EAAAA,EAAAA,MAAA,OACEI,UAAU,eACVC,MAAO,CACLC,QAASgC,GAA+B,IAAdE,EAAkB,OAAS,SACrDtC,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,kBAC3CC,EAAAA,EAAAA,KAAA,SACEC,UAAU,4BACVC,MAAO,CAAEG,YAAcwC,EAAsB,GAAZ,WACjCzC,SAAWV,IACTD,EAAMC,EFjPO,CAAS/B,KAAMT,GEiPE4F,GAC9BvD,EAAa,IAAKD,EAAW2D,KAAMvD,EAAEE,OAAO9B,OAAQ,EAEtD0G,YAAY,2DACZ1G,MAAOwB,EAAU2D,QAEnBjD,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQ4B,EAAsB,GAAZ,WAAiB9C,UAE1C8C,GAAW,iEAIjBhD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,wBAC3CC,EAAAA,EAAAA,KAAA,SACEC,UAAU,4BACVC,MAAO,CAAEG,YAAc0C,EAAuB,GAAZ,WAClC3C,SAAWV,IACTD,EAAMC,EFzPK,CAAS/B,KAAMN,GEyPE2F,GAC5BzD,EAAa,IAAKD,EAAW+D,MAAO3D,EAAEE,OAAO9B,OAAQ,EAEvD0G,YAAY,iEACZ1G,MAAOwB,EAAU+D,SAEnBrD,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQ8B,EAAuB,GAAZ,WAAiBhD,UAE3CgD,GAAY,wEAIlBlD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SAAC,8BAC3CC,EAAAA,EAAAA,KAAA,SACEC,UAAU,4BACVC,MAAO,CAAEG,YAAcxB,EAAuB,GAAZ,WAClCuB,SAAWV,IACTD,EAAMC,EAAG9B,IAAmBkB,GAC5BS,EAAa,IAAKD,EAAWE,MAAOE,EAAEE,OAAO9B,OAAQ,EAEvD0G,YAAY,uEACZ1G,MAAOwB,EAAUE,SAEnBQ,EAAAA,EAAAA,KAAA,QACEC,UAAU,0BACVC,MAAO,CAAEe,MAAQpC,EAAuB,GAAZ,WAAiBkB,UAE3ClB,GAAY,kIAKtBgB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,yBAAwBF,SAAA,EACrCC,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVK,QAASA,IAAMe,OAAOC,QAAQC,OAAOxB,SACtC,8BAGDC,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVC,MAAO,CACLC,QAASgC,GAA+B,IAAdE,EAAkB,QAAU,OACtDb,WAAY,SACZC,WAAY,UACZC,OAAQ,OACRT,MAAO,WAETX,QA9SKmE,KACftF,EAAY,IACPD,EACHkE,GAAIb,EACJW,GAAIT,EACJU,QAASR,GACT,EAwS0B5C,SACnB,8BAGDC,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVC,MAAO,CACLC,QAASgC,EACS,IAAdE,EACE,QACA,OACF,QACJb,WAAY,SACZkD,aAAc,UACdjD,WAAY,UACZC,OAAQ,OACRT,MAAO,WAETX,QArPcqB,KACxBxC,EAAY,IACPD,EACH+D,KAAMJ,EACNK,GAAIT,EACJU,QAASR,EACTS,GAAIb,EACJc,MAAON,EACPvD,MAAOX,GACP,EA4OmCkB,SAC5B,wDAMQ,ECxUrB,EAbe4E,KACb,MAAOC,EAAW7C,IAAgBhD,EAAAA,EAAAA,WAAS,GAE3C,OACEc,EAAAA,EAAAA,MAAA,OAAKI,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CAACC,MAAM,mCAAS/E,SAAC,iHAG1B6E,GAAY5E,EAAAA,EAAAA,KAACgC,EAAU,KAAMhC,EAAAA,EAAAA,KAAC+E,EAAU,CAAChD,aAAcA,MACpD,C,0DCbV,MAaA,EAbmBxD,IAEfsB,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,0BAAAO,OAA4BjC,EAAM0B,WAAYF,SACzDxB,EAAMuG,SAET9E,EAAAA,EAAAA,KAAA,OAAKC,UAAS,0BAAAO,OAA4BjC,EAAM0B,WAAYF,SACzDxB,EAAMwB,a","sources":["shared/util/validator.js","mypage/pages/Mypageauth.js","mypage/pages/Mypageedit.js","mypage/pages/Mypage.js","shared/Pagetitle/Pagetitle.js"],"sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_BIRTHDATE = \"BIRTHDATE\";\r\nconst VALIDATOR_TYPE_PHONE = \"PHONE\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\nconst VALIDATOR_TYPE_PASSWORD = \"PASSWORD\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\nexport const VALIDATOR_BIRTHDATE = () => ({ type: VALIDATOR_TYPE_BIRTHDATE });\r\nexport const VALIDATOR_PHONE = () => ({ type: VALIDATOR_TYPE_PHONE });\r\nexport const VALIDATOR_PASSWORD = () => ({ type: VALIDATOR_TYPE_PASSWORD });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_BIRTHDATE) {\r\n      isValid = isValid && /^\\d{4}\\.\\d{2}\\.\\d{2}$/.test(value);\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_PHONE) {\r\n      isValid = isValid && /^\\d{11}$/.test(value);\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_PASSWORD) {\r\n      const uppercase = /[A-Z]/.test(value);\r\n      const lowercase = /[a-z]/.test(value);\r\n      const number = /\\d/.test(value);\r\n      const specialChar = /[@$!%*?&]/.test(value);\r\n\r\n      const characterTypes = [uppercase, lowercase, number, specialChar];\r\n      const countCharacterTypes = characterTypes.filter((type) => type).length;\r\n\r\n      isValid =\r\n        isValid &&\r\n        countCharacterTypes >= 2 &&\r\n        /^[A-Za-z\\d@$!%*?&]{8,16}$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./Mypageauth.css\";\r\nimport {\r\n  validate,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_BIRTHDATE,\r\n  VALIDATOR_PHONE,\r\n  VALIDATOR_MAXLENGTH,\r\n} from \"../../shared/util/validator\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Mypageauth = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient(); //api호출 훅 불러오기\r\n\r\n  const [errphone, setErrPhone] = useState(true);\r\n  const [errnumber, setErrNumber] = useState(true);\r\n  const [authlist, setAuthList] = useState({\r\n    number: false,\r\n    auth: false,\r\n  });\r\n  const [inputlist, setInputList] = useState({\r\n    number: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const check = (e, validator, setstate) => {\r\n    const value = e.target.value;\r\n    const isValid = validate(value, [validator]);\r\n    setstate(isValid);\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    if (\r\n      Object.values(authlist).every((value) => value === true) &&\r\n      Object.values(inputlist).every((value) => value !== \"\")\r\n    ) {\r\n      props.setAuthCheck(true);\r\n    }\r\n  };\r\n\r\n  const sendsms = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/send`,\r\n        \"POST\",\r\n        JSON.stringify({ phone: inputlist.phone }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          token: `${localStorage.getItem(\"accessToken\")}`, // 헤더에 토큰 추가\r\n        }\r\n      );\r\n      setAuthList({\r\n        ...authlist,\r\n        number: true,\r\n        auth: false,\r\n      });\r\n      alert(\"인증번호가 발송되었습니다.\");\r\n    } catch (err) {\r\n      alert(\"휴대폰번호를 다시 입력해주세요.\");\r\n      setErrPhone(false);\r\n    }\r\n  };\r\n  const verify = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/verify`,\r\n        \"POST\",\r\n        JSON.stringify({ phone: inputlist.phone, auth_num: inputlist.number }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setAuthList({\r\n        ...authlist,\r\n        auth: true,\r\n      });\r\n      alert(\"인증번호가 확인되었습니다.\");\r\n    } catch (err) {\r\n      setAuthList({\r\n        ...authlist,\r\n        auth: false,\r\n      });\r\n      alert(\"인증번호를 다시 입력해주세요.\");\r\n      setErrNumber(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span className=\"mypage-auth_title\">본인 인증하기</span>\r\n      <div className=\"mypage-auth_contentcontain\">\r\n        <div className=\"mypage-auth_content\">\r\n          <span className=\"mypage-auth_content_name\">휴대전화 인증</span>\r\n          <div style={{ display: \"flex\" }}>\r\n            <input\r\n              className=\"mypage-auth_content_input2\"\r\n              onChange={(e) => {\r\n                check(e, VALIDATOR_PHONE(), setErrPhone);\r\n                setInputList({ ...inputlist, phone: e.target.value });\r\n              }}\r\n              style={{\r\n                borderColor: !errphone ? \"#FF4848\" : \"\",\r\n              }}\r\n            ></input>\r\n            <button className=\"mypage-auth_content_btn\" onClick={sendsms}>\r\n              인증요청\r\n            </button>\r\n          </div>\r\n          <span\r\n            className=\"mypage-auth_content_err\"\r\n            style={{ color: !errphone ? \"#FF4848\" : \"\" }}\r\n          >\r\n            {\"‘-’없이 휴대폰번호 11자리를 입력해주세요.\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"mypage-auth_content\">\r\n          <span className=\"mypage-auth_content_name\">인증번호</span>\r\n          <div style={{ display: \"flex\" }}>\r\n            <input\r\n              className=\"mypage-auth_content_input2\"\r\n              onChange={(e) => {\r\n                check(e, VALIDATOR_MINLENGTH(6), setErrNumber);\r\n                setInputList({ ...inputlist, number: e.target.value });\r\n              }}\r\n              style={{\r\n                borderColor: !errnumber ? \"#FF4848\" : \"\",\r\n              }}\r\n              readOnly={authlist.auth}\r\n            ></input>\r\n            <button\r\n              className=\"mypage-auth_content_btn\"\r\n              onClick={(e) => {\r\n                verify();\r\n              }}\r\n            >\r\n              확인\r\n            </button>\r\n          </div>\r\n          <span\r\n            className=\"mypage-auth_content_err\"\r\n            style={{ color: !errnumber ? \"#FF4848\" : \"\" }}\r\n          >\r\n            {\"인증번호 6자리를 입력해주세요.\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"mypage-auth_btncontain\">\r\n        <button\r\n          className=\"mypage-auth_btn\"\r\n          onClick={() => window.history.back()}\r\n        >\r\n          취소하기\r\n        </button>\r\n        <button\r\n          className=\"mypage-auth_btn\"\r\n          style={{\r\n            marginLeft: \"0.5rem\",\r\n            background: \"#4F80FF\",\r\n            border: \"none\",\r\n            color: \"#ffffff\",\r\n          }}\r\n          onClick={handleButtonClick}\r\n        >\r\n          내 정보 수정하기\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Mypageauth;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./Mypageedit.css\";\r\nimport {\r\n  validate,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_PHONE,\r\n  VALIDATOR_PASSWORD,\r\n} from \"../../shared/util/validator\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"; //api호출 훅 불러오기\r\n\r\nconst Mypageedit = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient(); //api호출 훅 불러오기\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\r\n  const [smallpage, setSmallpage] = useState(1);\r\n  const nextpage = () => {\r\n    setAuthList({\r\n      ...authlist,\r\n      id: errid,\r\n      pw: errpw,\r\n      pwcheck: errpwcheck,\r\n    });\r\n  };\r\n  const [errid, setErrId] = useState(true);\r\n  const [errpw, setErrPw] = useState(true);\r\n  const [errpwcheck, setErrPwCheck] = useState(true);\r\n  const [errname, setErrName] = useState(true);\r\n  const [erremail, setErrEmail] = useState(true);\r\n  const [errphone, setErrPhone] = useState(true);\r\n  const [authlist, setAuthList] = useState({\r\n    name: false,\r\n    pw: false,\r\n    pwcheck: false,\r\n    id: false,\r\n    email: false,\r\n    phone: false,\r\n  });\r\n  const [inputlist, setInputList] = useState({\r\n    name: \"\",\r\n    pw: \"\",\r\n    pwcheck: \"\",\r\n    id: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const [getData, setGetData] = useState();\r\n  useEffect(() => {\r\n    //api호출 훅 실행\r\n    const loadmydata = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/accounts`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            token: `${localStorage.getItem(\"accessToken\")}`, // 헤더에 토큰 추가\r\n          }\r\n        );\r\n\r\n        await setGetData(responseData.response);\r\n      } catch (err) {}\r\n    };\r\n    loadmydata();\r\n\r\n    function handleResize() {\r\n      if (window.innerWidth < 768) {\r\n        setIsSmallScreen(true);\r\n      } else {\r\n        setIsSmallScreen(false);\r\n      }\r\n    }\r\n    handleResize();\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const check = (e, validator, setstate) => {\r\n    const value = e.target.value;\r\n    const isValid = validate(value, [validator]);\r\n    setstate(isValid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setErrPwCheck(inputlist.pw === inputlist.pwcheck);\r\n  }, [inputlist]);\r\n\r\n  const handleButtonClick = () => {\r\n    setAuthList({\r\n      ...authlist,\r\n      name: errname,\r\n      pw: errpw,\r\n      pwcheck: errpwcheck,\r\n      id: errid,\r\n      email: erremail,\r\n      phone: errphone,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (!!getData) {\r\n      setInputList({\r\n        name: getData.nickname,\r\n        pw: \"\", // 비밀번호 초기값은 빈 문자열로 남겨둘 수 있습니다.\r\n        pwcheck: \"\", // 비밀번호 확인 초기값은 빈 문자열로 남겨둘 수 있습니다.\r\n        id: getData.id, // 아이디 초기값 설정\r\n        email: getData.email,\r\n        phone: getData.phonenumber,\r\n      });\r\n    }\r\n  }, [getData]);\r\n  useEffect(() => {\r\n    if (\r\n      isSmallScreen &&\r\n      smallpage === 1 &&\r\n      authlist.id &&\r\n      authlist.pw &&\r\n      authlist.pwcheck &&\r\n      inputlist.id !== \"\" &&\r\n      inputlist.pw !== \"\" &&\r\n      inputlist.pwcheck !== \"\"\r\n    ) {\r\n      setSmallpage(2);\r\n      return;\r\n    }\r\n    if (\r\n      Object.values(authlist).every((value) => value === true) &&\r\n      Object.values(inputlist).every((value) => value !== \"\")\r\n    ) {\r\n      // navigate(\"/\");\r\n      //api호출 훅 실행\r\n      const mypageedit = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/accounts`,\r\n            \"PATCH\",\r\n            JSON.stringify({\r\n              password: inputlist.pw,\r\n              nickname: inputlist.name,\r\n              email: inputlist.email,\r\n              phonenumber: inputlist.phone,\r\n              update_date: \"2023-11-05T05:57:16.839Z\",\r\n            }),\r\n            {\r\n              \"Content-Type\": \"application/json\",\r\n              token: `${localStorage.getItem(\"accessToken\")}`,\r\n            }\r\n          );\r\n          await navigate(\"/\");\r\n        } catch (err) {}\r\n      };\r\n      mypageedit();\r\n    }\r\n  }, [authlist]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoading && getData && (\r\n        <>\r\n          <img\r\n            className=\"mypage-edit_img\"\r\n            src=\"/img/mypage/Default.png\"\r\n            alt=\"mypageimg\"\r\n          ></img>\r\n\r\n          <div className=\"mypage-auth_contentcontain\">\r\n            <div\r\n              className=\"mobile-page1\"\r\n              style={{\r\n                display: isSmallScreen && smallpage !== 1 ? \"none\" : \"block\",\r\n              }}\r\n            >\r\n              <div className=\"mypage-auth_content\">\r\n                <span className=\"mypage-auth_content_name\">아이디</span>\r\n                <input\r\n                  className=\"mypage-auth_content_input\"\r\n                  style={{ borderColor: !errid ? \"#FF4848\" : \"\" }}\r\n                  onChange={(e) => {\r\n                    check(e, VALIDATOR_MINLENGTH(4), setErrId);\r\n                    setInputList({ ...inputlist, id: e.target.value });\r\n                  }}\r\n                  placeholder=\"아이디를 입력해주세요.\"\r\n                  value={inputlist.id}\r\n                ></input>\r\n                <span\r\n                  className=\"mypage-auth_content_err\"\r\n                  style={{ color: !errid ? \"#FF4848\" : \"\" }}\r\n                >\r\n                  {!errid && \"아이디를 4글자 이상 입력해주세요.\"}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"mypage-auth_content\">\r\n                <span className=\"mypage-auth_content_name\">비밀번호</span>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"mypage-auth_content_input\"\r\n                  style={{ borderColor: !errpw ? \"#FF4848\" : \"\" }}\r\n                  onChange={(e) => {\r\n                    check(e, VALIDATOR_PASSWORD(), setErrPw);\r\n                    setInputList({ ...inputlist, pw: e.target.value });\r\n                  }}\r\n                  placeholder=\"비밀번호를 입력해주세요.\"\r\n                ></input>\r\n                <span\r\n                  className=\"mypage-auth_content_err\"\r\n                  style={{ color: !errpw ? \"#FF4848\" : \"\" }}\r\n                >\r\n                  {!errpw &&\r\n                    \"비밀번호를 영문대/소문자,숫자,특수문자 중 2가지 이상 조합하여 8~16자 사이로 입력해주세요.\"}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"mypage-auth_content\">\r\n                <span className=\"mypage-auth_content_name\">비밀번호 확인</span>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"mypage-auth_content_input\"\r\n                  style={{ borderColor: !errpwcheck ? \"#FF4848\" : \"\" }}\r\n                  onChange={(e) => {\r\n                    setInputList({ ...inputlist, pwcheck: e.target.value });\r\n                  }}\r\n                  placeholder=\"비밀번호를 입력해주세요.\"\r\n                ></input>\r\n                <span\r\n                  className=\"mypage-auth_content_err\"\r\n                  style={{ color: !errpwcheck ? \"#FF4848\" : \"\" }}\r\n                >\r\n                  {!errpwcheck && \"비밀번호가 다릅니다.\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"mobile-page2\"\r\n              style={{\r\n                display: isSmallScreen && smallpage !== 2 ? \"none\" : \"block\",\r\n              }}\r\n            >\r\n              <div className=\"mypage-auth_content\">\r\n                <span className=\"mypage-auth_content_name\">이름</span>\r\n                <input\r\n                  className=\"mypage-auth_content_input\"\r\n                  style={{ borderColor: !errname ? \"#FF4848\" : \"\" }}\r\n                  onChange={(e) => {\r\n                    check(e, VALIDATOR_REQUIRE(), setErrName);\r\n                    setInputList({ ...inputlist, name: e.target.value });\r\n                  }}\r\n                  placeholder=\"이름을 입력해주세요.\"\r\n                  value={inputlist.name}\r\n                ></input>\r\n                <span\r\n                  className=\"mypage-auth_content_err\"\r\n                  style={{ color: !errname ? \"#FF4848\" : \"\" }}\r\n                >\r\n                  {!errname && \"이름을 입력해주세요.\"}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"mypage-auth_content\">\r\n                <span className=\"mypage-auth_content_name\">이메일</span>\r\n                <input\r\n                  className=\"mypage-auth_content_input\"\r\n                  style={{ borderColor: !erremail ? \"#FF4848\" : \"\" }}\r\n                  onChange={(e) => {\r\n                    check(e, VALIDATOR_EMAIL(), setErrEmail);\r\n                    setInputList({ ...inputlist, email: e.target.value });\r\n                  }}\r\n                  placeholder=\"이메일을 입력해주세요.\"\r\n                  value={inputlist.email}\r\n                ></input>\r\n                <span\r\n                  className=\"mypage-auth_content_err\"\r\n                  style={{ color: !erremail ? \"#FF4848\" : \"\" }}\r\n                >\r\n                  {!erremail && \"이메일 형식이 아닙니다.\"}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"mypage-auth_content\">\r\n                <span className=\"mypage-auth_content_name\">휴대전화</span>\r\n                <input\r\n                  className=\"mypage-auth_content_input\"\r\n                  style={{ borderColor: !errphone ? \"#FF4848\" : \"\" }}\r\n                  onChange={(e) => {\r\n                    check(e, VALIDATOR_PHONE(), setErrPhone);\r\n                    setInputList({ ...inputlist, phone: e.target.value });\r\n                  }}\r\n                  placeholder=\"휴대전화를 입력해주세요.\"\r\n                  value={inputlist.phone}\r\n                ></input>\r\n                <span\r\n                  className=\"mypage-auth_content_err\"\r\n                  style={{ color: !errphone ? \"#FF4848\" : \"\" }}\r\n                >\r\n                  {!errphone && \"‘-’없이 휴대폰번호 11자리를 입력해주세요.\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mypage-auth_btncontain\">\r\n            <button\r\n              className=\"mypage-auth_btn\"\r\n              onClick={() => window.history.back()}\r\n            >\r\n              취소하기\r\n            </button>\r\n            <button\r\n              className=\"mypage-auth_btn\"\r\n              style={{\r\n                display: isSmallScreen && smallpage === 1 ? \"block\" : \"none\",\r\n                marginLeft: \"0.5rem\",\r\n                background: \"#4F80FF\",\r\n                border: \"none\",\r\n                color: \"#ffffff\",\r\n              }}\r\n              onClick={nextpage}\r\n            >\r\n              다음으로\r\n            </button>\r\n            <button\r\n              className=\"mypage-auth_btn\"\r\n              style={{\r\n                display: isSmallScreen\r\n                  ? smallpage === 2\r\n                    ? \"block\"\r\n                    : \"none\"\r\n                  : \"block\",\r\n                marginLeft: \"0.5rem\",\r\n                marginBottom: \"11.5rem\",\r\n                background: \"#4F80FF\",\r\n                border: \"none\",\r\n                color: \"#ffffff\",\r\n              }}\r\n              onClick={handleButtonClick}\r\n            >\r\n              내 정보 수정하기\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Mypageedit;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Mypage.css\";\r\nimport Pagetitle from \"../../shared/Pagetitle/Pagetitle\";\r\nimport Mypageauth from \"./Mypageauth\";\r\nimport Mypageedit from \"./Mypageedit\";\r\n\r\nconst Mypage = () => {\r\n  const [authcheck, setAuthCheck] = useState(false);\r\n\r\n  return (\r\n    <div className=\"mypage-auth\">\r\n      <Pagetitle title=\"내 정보 수정\">\r\n        계정 정보를 확인하고 수정할 수 있습니다.\r\n      </Pagetitle>\r\n      {authcheck ? <Mypageedit /> : <Mypageauth setAuthCheck={setAuthCheck} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mypage;\r\n","import React from \"react\";\r\nimport \"./Pagetitle.css\";\r\n\r\nconst Pagetitle = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={`pagetitle_title center ${props.className}`}>\r\n        {props.title}\r\n      </div>\r\n      <div className={`pagetitle_guide center ${props.className}`}>\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagetitle;\r\n"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_BIRTHDATE","VALIDATOR_TYPE_PHONE","VALIDATOR_TYPE_PASSWORD","VALIDATOR_MINLENGTH","val","type","VALIDATOR_PHONE","validate","value","validators","isValid","validator","trim","length","test","countCharacterTypes","filter","props","isLoading","error","sendRequest","clearError","useHttpClient","errphone","setErrPhone","useState","errnumber","setErrNumber","authlist","setAuthList","number","auth","inputlist","setInputList","phone","check","e","setstate","target","_jsxs","React","children","_jsx","className","style","display","onChange","borderColor","onClick","async","concat","process","JSON","stringify","token","localStorage","getItem","alert","err","color","readOnly","auth_num","verify","window","history","back","marginLeft","background","border","handleButtonClick","Object","values","every","setAuthCheck","Mypageedit","navigate","useNavigate","isSmallScreen","setIsSmallScreen","smallpage","setSmallpage","errid","setErrId","errpw","setErrPw","errpwcheck","setErrPwCheck","errname","setErrName","erremail","setErrEmail","name","pw","pwcheck","id","email","getData","setGetData","useEffect","handleResize","innerWidth","responseData","response","loadmydata","addEventListener","removeEventListener","nickname","phonenumber","password","update_date","mypageedit","_Fragment","src","alt","placeholder","nextpage","marginBottom","Mypage","authcheck","Pagetitle","title","Mypageauth"],"sourceRoot":""}