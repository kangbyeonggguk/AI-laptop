{"version":3,"file":"static/js/459.2465b6d0.chunk.js","mappings":"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","sources":["rating/pages/Rating.js","shared/Pagetitle/Pagetitle.js","shared/UIElements/Backdrop.js","shared/UIElements/Card.js","shared/UIElements/Filter.js","shared/UIElements/Modal.js","shared/UIElements/Page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport \"./Rating.css\";\r\nimport Filter from \"../../shared/UIElements/Filter\";\r\nimport Pagetitle from \"../../shared/Pagetitle/Pagetitle\";\r\nimport Page from \"../../shared/UIElements/Page\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Rating = () => {\r\n  const { isLoading, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [itemlen, setItemLen] = useState(10);\r\n  const [loadeddata, setLoadedData] = useState([]);\r\n  const [error, setError] = useState();\r\n\r\n  const searchparamshandler = (sort, value) => {\r\n    //쿼리 생성 및 변경\r\n    searchParams.set(`${sort}`, `${value}`);\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  // const menuarray = [\"recent\", \"soldout\", \"interior\"]; //쿼리에 따라 menu 체크\r\n  // const [menuindex, setMenuIndex] = useState(\r\n  //   searchParams.get(\"situation\") === null\r\n  //     ? 0\r\n  //     : parseInt(menuarray.indexOf(searchParams.get(\"situation\")))\r\n  // );\r\n  useEffect(() => {\r\n    const getinfo = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/sell?${\r\n            searchParams.get(\"page\") ? `page=${searchParams.get(\"page\")}` : 1\r\n          }${\r\n            searchParams.get(\"date\")\r\n              ? `&date=${searchParams.get(\"date\")}`\r\n              : \"desc\"\r\n          }${\r\n            searchParams.get(\"rating\")\r\n              ? `&rank=${searchParams.get(\"rating\")}`\r\n              : \"\"\r\n          }`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            token: `${localStorage.getItem(\"accessToken\")}`, // 헤더에 토큰 추가\r\n          }\r\n        );\r\n        setItemLen(responseData.totalcount);\r\n        setLoadedData(responseData.laptop_sell_info);\r\n        console.log(responseData.laptop_sell_info[1]);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n    getinfo();\r\n  }, [searchParams]);\r\n  // useEffect(() => {\r\n  //   console.log(loadeddata[1].laptop_sell_images);\r\n  // }, [loadeddata]);\r\n  function formatDate(inputDate) {\r\n    const date = new Date(inputDate);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}. ${month}. ${day}`;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoading && loadeddata && (\r\n        <div className=\"rating\">\r\n          <Pagetitle title=\"노트북 등급\">\r\n            나의 노트북을 모아볼 수 있습니다.\r\n          </Pagetitle>\r\n          <div className=\"rating_sort\">\r\n            {/* <div className=\"rating_sort_menucontain\">\r\n            {[\r\n              [\"최근 등급 측정 노트북\", \"recent\"],\r\n              [\"판매한 노트북\", \"soldout\"],\r\n              [\"내부 등급 측정 노트북\", \"interior\"],\r\n            ].map((menu, index) => (\r\n              <div\r\n                key={index}\r\n                className={`rating_sort_menu center ${\r\n                  menuindex === index ? \" rating_sort_menu_active\" : \"\" //선택된 메뉴 css 변경(기본은 첫번째 메뉴 활성화)\r\n                }`}\r\n                onClick={() => {\r\n                  setMenuIndex(index);\r\n                  searchparamshandler(\"situation\", menu[1]); //메뉴 선택시 쿼리도 생성\r\n                }}\r\n              >\r\n                {menu[0]}\r\n              </div>\r\n            ))}\r\n          </div> */}\r\n            <div className=\"rating-sort_filter center\">\r\n              <Filter title=\"날짜순\"></Filter>\r\n              {/*클릭 시 필터 표시*/}\r\n            </div>\r\n          </div>\r\n          <div className=\"rating_notebook_contain\">\r\n            {loadeddata.map((notebook, index) => (\r\n              <div\r\n                className=\"rating_notebook \"\r\n                key={index}\r\n                onClick={() =>\r\n                  navigate(`/process`, {\r\n                    state: {\r\n                      totalRank: notebook.rank,\r\n                      frontImage: notebook.laptop_sell_images[1].path,\r\n                      id: notebook.laptop_sell_info_id,\r\n                    },\r\n                  })\r\n                }\r\n              >\r\n                <div className=\"rating_notebook_imgbox center\">\r\n                  <img\r\n                    className=\"rating_notebook_img\"\r\n                    src={\r\n                      notebook.laptop_sell_images[1]\r\n                        ? `${notebook.laptop_sell_images[1].path}`\r\n                        : \"null\"\r\n                    }\r\n                    alt=\"notebookimage\"\r\n                  ></img>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"rating_notebook_name \">\r\n                    {notebook.device_name}\r\n                  </div>\r\n                  <div className=\"rating_notebook_model\">\r\n                    모델명: {notebook.serial_number}\r\n                    <br />\r\n                    등록일: {formatDate(notebook.create_date)}\r\n                  </div>\r\n                  <div className=\"rating_notebook_des\">\r\n                    {notebook.product_details}\r\n                  </div>\r\n                  <img\r\n                    className=\"rating_notebook_rank\"\r\n                    src={`/img/rating/${notebook.rank}.png`}\r\n                    alt=\"rankimage\"\r\n                  ></img>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {itemlen != 0 ? (\r\n            <Page\r\n              itemlen={itemlen}\r\n              searchParams={searchParams}\r\n              setSearchParams={setSearchParams}\r\n              searchparamshandler={searchparamshandler}\r\n              itemcount={9}\r\n            ></Page>\r\n          ) : (\r\n            <Page\r\n              itemlen={1}\r\n              searchParams={searchParams}\r\n              setSearchParams={setSearchParams}\r\n              searchparamshandler={searchparamshandler}\r\n              itemcount={9}\r\n            ></Page>\r\n          )}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport \"./Pagetitle.css\";\r\n\r\nconst Pagetitle = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={`pagetitle_title center ${props.className}`}>\r\n        {props.title}\r\n      </div>\r\n      <div className={`pagetitle_guide center ${props.className}`}>\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagetitle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      className={`backdrop ${props.className}`}\r\n      onClick={props.onClick}\r\n    ></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={`card ${props.className}`}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport \"./Filter.css\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Filter = (props) => {\r\n  let pricecheck = false;\r\n  if (props.title === \"낮은가격순\") {\r\n    pricecheck = true;\r\n  }\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const searchparamshandler = (sort, value) => {\r\n    //쿼리 생성\r\n    searchParams.set(`${sort}`, `${value}`);\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  const [showFilter, setShowFilter] = useState(false); //필터 활성화,비활성화\r\n  const closefilter = () => {\r\n    setShowFilter(false);\r\n  };\r\n  const openfilter = () => {\r\n    setShowFilter(true);\r\n    filtercancle();\r\n  };\r\n\r\n  const pricearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 price 메뉴 체크\r\n  const [priceIndex, setPriceIndex] = useState(\r\n    searchParams.get(\"price\") === null\r\n      ? 0\r\n      : parseInt(pricearray.indexOf(searchParams.get(\"price\")))\r\n  );\r\n\r\n  const datearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 date 메뉴 체크\r\n  const [dateIndex, setDateIndex] = useState(\r\n    searchParams.get(\"date\") === null\r\n      ? 0\r\n      : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n  );\r\n\r\n  // const namearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 name 메뉴 체크\r\n  // const [nameIndex, setNameIndex] = useState(\r\n  //   searchParams.get(\"name\") === null\r\n  //     ? 0\r\n  //     : parseInt(namearray.indexOf(searchParams.get(\"name\")))\r\n  // );\r\n\r\n  const ratingarray = [\"\", \"ss\", \"s\", \"a\", \"b\", \"c\"]; //쿼리에 따라 rank 메뉴 체크\r\n  const [ratingIndex, setRatingIndex] = useState(\r\n    searchParams.get(\"rating\") === null\r\n      ? 0\r\n      : parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n  );\r\n\r\n  const [filter, setFilter] = useState({\r\n    //filter 내용 초기값 지정\r\n    rating: `${\r\n      searchParams.get(\"rating\") === null\r\n        ? \"\"\r\n        : ratingarray[parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))]\r\n    }`,\r\n    ...(pricecheck\r\n      ? {\r\n          price: `${\r\n            searchParams.get(\"price\") === null\r\n              ? \"asc\"\r\n              : datearray[\r\n                  parseInt(datearray.indexOf(searchParams.get(\"price\")))\r\n                ]\r\n          }`,\r\n        }\r\n      : {\r\n          date: `${\r\n            searchParams.get(\"date\") === null\r\n              ? \"desc\"\r\n              : datearray[parseInt(datearray.indexOf(searchParams.get(\"date\")))]\r\n          }`,\r\n          // name: `${\r\n          //   searchParams.get(\"name\") === null\r\n          //     ? \"asc\"\r\n          //     : namearray[parseInt(namearray.indexOf(searchParams.get(\"name\")))]\r\n          // }`,\r\n        }),\r\n  });\r\n  const filtersave = () => {\r\n    //저장하기 클릭 시 filter에 따른 쿼리 생성\r\n    for (const key in filter) {\r\n      searchparamshandler(`${key}`, `${filter[key]}`);\r\n      searchparamshandler(`page`, 1);\r\n    }\r\n  };\r\n  const filtercancle = () => {\r\n    //취소하기 선택 시 선택 된 버튼과 filter값 초기화\r\n    setDateIndex(\r\n      searchParams.get(\"date\") === null\r\n        ? 0\r\n        : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n    );\r\n    // setNameIndex(\r\n    //   searchParams.get(\"date\") === null\r\n    //     ? 0\r\n    //     : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n    // );\r\n    setRatingIndex(\r\n      searchParams.get(\"rating\") === null\r\n        ? 0\r\n        : parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n    );\r\n\r\n    if (pricecheck) {\r\n      setPriceIndex(\r\n        searchParams.get(\"price\") === null\r\n          ? 0\r\n          : parseInt(pricearray.indexOf(searchParams.get(\"price\")))\r\n      );\r\n    }\r\n\r\n    setFilter({\r\n      rating: `${\r\n        searchParams.get(\"rating\") === null\r\n          ? \"\"\r\n          : ratingarray[\r\n              parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n            ]\r\n      }`,\r\n      ...(pricecheck\r\n        ? {\r\n            price: `${\r\n              searchParams.get(\"price\") === null\r\n                ? \"asc\"\r\n                : datearray[\r\n                    parseInt(datearray.indexOf(searchParams.get(\"price\")))\r\n                  ]\r\n            }`,\r\n          }\r\n        : {\r\n            date: `${\r\n              searchParams.get(\"date\") === null\r\n                ? \"all\"\r\n                : datearray[\r\n                    parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n                  ]\r\n            }`,\r\n            // name: `${\r\n            //   searchParams.get(\"name\") === null\r\n            //     ? \"all\"\r\n            //     : namearray[\r\n            //         parseInt(namearray.indexOf(searchParams.get(\"name\")))\r\n            //       ]\r\n            // }`,\r\n          }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal show={showFilter} onCancel={closefilter} className=\"filter-modal\">\r\n        <div className=\"filter-modal_title\">\r\n          <div className=\"filter-modal_title_text\">필터</div>\r\n          <img\r\n            className=\"filter-modal_title_cancle\"\r\n            src=\"/img/modal/Cancle.png\"\r\n            alt=\"Cancle\"\r\n            onClick={closefilter}\r\n          />\r\n        </div>\r\n        {pricecheck && (\r\n          <>\r\n            <div className=\"filter-modal_date\">가격</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"asc\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    priceIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    setPriceIndex(index);\r\n                    setFilter((prev) => ({ ...prev, price: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        {!pricecheck && (\r\n          <>\r\n            <div\r\n              className={pricecheck ? \"filter-modal_name\" : \"filter-modal_date\"}\r\n            >\r\n              날짜\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"all\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    dateIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    setDateIndex(index);\r\n                    setFilter((prev) => ({ ...prev, date: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {/* <div className=\"filter-modal_name\">이름</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"all\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    nameIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    // setNameIndex(index);\r\n                    setFilter((prev) => ({ ...prev, name: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div> */}\r\n          </>\r\n        )}\r\n\r\n        <div className=\"filter-modal_name\">등급</div>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", width: \"14rem\" }}>\r\n          {[\r\n            [\"전체\", \"\"],\r\n            [\"SS\", \"ss\"],\r\n            [\"S\", \"s\"],\r\n            [\"A\", \"a\"],\r\n            [\"B\", \"b\"],\r\n            [\"C\", \"c\"],\r\n          ].map((menu, index) => (\r\n            <div\r\n              key={index}\r\n              className={`filter-modal_menu center ${\r\n                ratingIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n              }`}\r\n              onClick={() => {\r\n                setRatingIndex(index);\r\n                setFilter((prev) => ({ ...prev, rating: `${menu[1]}` }));\r\n              }}\r\n            >\r\n              {menu[0]}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div\r\n            className=\"filter-modal_savebtn center\"\r\n            onClick={() => {\r\n              closefilter();\r\n              filtersave();\r\n            }}\r\n          >\r\n            저장하기\r\n          </div>\r\n          <div\r\n            className=\"filter-modal_canclebtn center\"\r\n            onClick={() => {\r\n              filtercancle();\r\n              closefilter();\r\n            }}\r\n          >\r\n            취소\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <img\r\n        className=\"filterimg\"\r\n        src=\"/img/rating/Filter.png\"\r\n        alt=\"filterimage\"\r\n      ></img>\r\n      <div className=\"filter\" onClick={openfilter}>\r\n        {props.title}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport Card from \"./Card\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && (\r\n        <Backdrop onClick={props.onCancel} className={props.Backdropclass} />\r\n      )}\r\n      {props.detail && (\r\n        <div className=\"backdrop_double\" onClick={props.onCancel} />\r\n      )}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200} // 200ms 동안 트랜지션 지속\r\n        classNames=\"modal\"\r\n      >\r\n        <>\r\n          <Card className={`modal ${props.className}`}>{props.children}</Card>\r\n          {props.detail && (\r\n            <div className=\"slide_modal_container \">\r\n              <img\r\n                src=\"/img/admin/Left_arrow.png\"\r\n                alt=\"left_arrow\"\r\n                className=\"modal_arrow_detail\"\r\n              />\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.front)}\r\n              >\r\n                <img\r\n                  src={props.front}\r\n                  alt=\"front\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.back)}\r\n              >\r\n                <img\r\n                  src={props.back}\r\n                  alt=\"back\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.keyboard)}\r\n              >\r\n                <img\r\n                  src={props.keyboard}\r\n                  alt=\"keyboard\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.monitor)}\r\n              >\r\n                <img\r\n                  src={props.monitor}\r\n                  alt=\"monitor\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <img\r\n                src=\"/img/admin/Right_arrow.png\"\r\n                alt=\"left_arrow\"\r\n                className=\"modal_arrow_detail\"\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Page.css\";\r\n\r\nconst Page = (props) => {\r\n  const searchParams = props.searchParams;\r\n  const setSearchParams = props.setSearchParams;\r\n  const searchparamshandler = props.searchparamshandler;\r\n  const page = Math.ceil(props.itemlen / props.itemcount); //데이터 총 개수에 따라 페이지 계산\r\n  const pagearray = [];\r\n  for (let i = 1; i < page + 1; i++) {\r\n    pagearray.push(i);\r\n  }\r\n  const [pageindex, setPageIndex] = useState(\r\n    searchParams.get(\"page\") === null\r\n      ? 0\r\n      : parseInt(pagearray.indexOf(parseInt(searchParams.get(\"page\")))) //쿼리에 따라 페이지 체크\r\n  );\r\n  const pageplus = () => {\r\n    //페이지 증가\r\n    if (pageindex === page - 1) {\r\n      setPageIndex(pageindex);\r\n    } else {\r\n      setPageIndex(pageindex + 1);\r\n      searchParams.set(\"page\", `${pageindex + 2}`);\r\n      setSearchParams(searchParams);\r\n    }\r\n  };\r\n  const pageminus = () => {\r\n    //페이지 감소\r\n    if (pageindex === 0) {\r\n      setPageIndex(0);\r\n    } else {\r\n      setPageIndex(pageindex - 1);\r\n      searchParams.set(\"page\", `${pageindex}`);\r\n      setSearchParams(searchParams);\r\n    }\r\n  };\r\n\r\n  const [pagecut, setPagecut] = useState(0); //페이지를 5단위로 체크하고 변경\r\n  useEffect(() => {\r\n    if (pageindex > pagecut + 4) {\r\n      setPagecut(pagecut + 5);\r\n    } else if (pageindex < pagecut) {\r\n      setPagecut(pagecut - 5);\r\n    }\r\n  }, [pageindex, pagecut]);\r\n\r\n  return (\r\n    <div className=\"page center\">\r\n      <img\r\n        className=\"page_arrow\"\r\n        src=\"/img/rating/leftarrow.png\"\r\n        onClick={pageminus}\r\n        alt=\"pagearrow\"\r\n      />\r\n      <div className=\"page_num_contain center\">\r\n        {/*페이지 표시*/}\r\n        {page < 5\r\n          ? pagearray.map((page, index) => (\r\n              <div\r\n                key={index}\r\n                className={`page_num center ${\r\n                  pageindex === index ? \" page_num_active\" : \"\"\r\n                }`}\r\n                onClick={() => {\r\n                  setPageIndex(index);\r\n                  searchparamshandler(\"page\", `${index + 1}`);\r\n                }}\r\n              >\r\n                {page}\r\n              </div>\r\n            ))\r\n          : pagearray.map((page, index) => {\r\n              return (\r\n                index >= pagecut &&\r\n                index <= 4 + pagecut && (\r\n                  <div\r\n                    key={index}\r\n                    className={`page_num center ${\r\n                      pageindex === index ? \" page_num_active\" : \"\"\r\n                    }`}\r\n                    onClick={() => {\r\n                      setPageIndex(index);\r\n                      searchparamshandler(\"page\", `${index + 1}`);\r\n                    }}\r\n                  >\r\n                    {page}\r\n                  </div>\r\n                )\r\n              );\r\n            })}\r\n      </div>\r\n      <img\r\n        className=\"page_arrow\"\r\n        src=\"/img/rating/rightarrow.png\"\r\n        onClick={pageplus}\r\n        alt=\"pagearrow\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["Rating","isLoading","sendRequest","clearError","useHttpClient","navigate","useNavigate","searchParams","setSearchParams","useSearchParams","itemlen","setItemLen","useState","loadeddata","setLoadedData","error","setError","searchparamshandler","sort","value","set","concat","formatDate","inputDate","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","useEffect","async","responseData","process","get","token","localStorage","getItem","totalcount","laptop_sell_info","console","log","err","getinfo","_jsx","React","children","_jsxs","className","Pagetitle","title","Filter","map","notebook","index","onClick","state","totalRank","rank","frontImage","laptop_sell_images","path","id","laptop_sell_info_id","src","alt","device_name","serial_number","create_date","product_details","Page","itemcount","props","ReactDOM","document","getElementById","pricecheck","showFilter","setShowFilter","closefilter","pricearray","priceIndex","setPriceIndex","parseInt","indexOf","datearray","dateIndex","setDateIndex","ratingarray","ratingIndex","setRatingIndex","filter","setFilter","rating","price","filtercancle","Modal","show","onCancel","_Fragment","style","display","menu","prev","flexWrap","width","filtersave","key","openfilter","Backdrop","Backdropclass","detail","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Card","onImageClick","front","back","keyboard","monitor","page","Math","ceil","pagearray","i","push","pageindex","setPageIndex","pagecut","setPagecut","pageminus","pageplus"],"sourceRoot":""}