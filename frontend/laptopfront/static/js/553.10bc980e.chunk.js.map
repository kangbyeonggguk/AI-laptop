{"version":3,"file":"static/js/553.10bc980e.chunk.js","mappings":"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","sources":["goods/pages/Goods.js","shared/Pagetitle/Pagetitle.js","shared/UIElements/Backdrop.js","shared/UIElements/Card.js","shared/UIElements/Filter.js","shared/UIElements/Modal.js","shared/UIElements/Page.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Goods.css\";\r\nimport Pagetitle from \"../../shared/Pagetitle/Pagetitle\";\r\nimport Filter from \"../../shared/UIElements/Filter\";\r\nimport Page from \"../../shared/UIElements/Page\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\"; //api호출 훅 불러오기\r\n\r\nconst Goods = (props) => {\r\n  const isLoading = props.isLoading;\r\n  const loadedGoods = props.loadedGoods;\r\n  const itemlen = props.totalcount;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!isLoading && loadedGoods && (\r\n        <>\r\n          <div className=\"goods\">\r\n            <Pagetitle title=\"구매하기\">\r\n              판매자들의 노트북을 구매할 수 있습니다\r\n            </Pagetitle>\r\n            <div className=\"goods_sortcontain\">\r\n              <Filter title=\"낮은가격순\"></Filter>\r\n            </div>\r\n            <div className=\"goods_notebookcontain\">\r\n              {!props.error &&\r\n                loadedGoods.map((notebook, index) => (\r\n                  <NavLink\r\n                    key={index}\r\n                    to={`/main/goods/detail/${notebook.laptop_info_list_id}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <div className=\"goods_notebook\" key={index}>\r\n                      <div>\r\n                        {/*-- */}\r\n                        <div className=\"goods_notebook_imgbox center\">\r\n                          {notebook.laptop_info_list.laptop_info_list_image\r\n                            .length > 0 ? (\r\n                            <img\r\n                              className=\"goods_notebook_img\"\r\n                              src={`${\r\n                                notebook.laptop_info_list\r\n                                  .laptop_info_list_image[\r\n                                  notebook.laptop_info_list\r\n                                    .laptop_info_list_image.length - 1\r\n                                ].path\r\n                              }`}\r\n                              alt=\"notebookimage\"\r\n                            />\r\n                          ) : (\r\n                            <div>No Image Available</div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"goods_notebook_name\">\r\n                          [{notebook.title}]\r\n                          {notebook.laptop_info_list.device_name}\r\n                        </div>\r\n                        <div className=\"goods_notebook_pricecontain\">\r\n                          <div className=\"goods_notebook_price\">\r\n                            {notebook.price_time_sale\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            원\r\n                          </div>\r\n                          <div className=\"goods_notebook_discount\">\r\n                            {notebook.price\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                            원\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/*-- */}\r\n                      <div>\r\n                        <div className=\"goods_notebook_des\">\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">OS</div>\r\n                            <div className=\"goods_des_value\">\r\n                              <img\r\n                                className=\"goods_dev_osimg\"\r\n                                src={`/img/goods/Window 10 HOME.png`}\r\n                              />\r\n                              {notebook.os}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">화면크기</div>\r\n                            <div className=\"goods_des_value\">\r\n                              <img\r\n                                className=\"goods_dev_scaleimg\"\r\n                                src={`/img/goods/scale.png`}\r\n                              />\r\n                              {notebook.laptop_info_list.screen_size}인치\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">업무용</div>\r\n                            <div className=\"goods_des_value\">\r\n                              {notebook.laptop_info_list.business_usage\r\n                                .split(\",\")\r\n                                .map((img, index) => (\r\n                                  <img\r\n                                    key={index}\r\n                                    className=\"goods_dev_useimg\"\r\n                                    src={`/img/goods/${img}.png`}\r\n                                  />\r\n                                ))}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">인강용</div>\r\n                            <div className=\"goods_des_value\">\r\n                              인터넷 강의 용으로{\" \"}\r\n                              {notebook.laptop_info_list.internet_lecture_usage}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain\">\r\n                            <div className=\"goods_des_title\">게임용</div>\r\n                            <div className=\"goods_des_value\">\r\n                              {notebook.laptop_info_list.gaming_usage}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"goods_descontain_hardware\">\r\n                            <div className=\"goods_des_title\">하드웨어</div>\r\n                            <div className=\"goods_des_value_hardware\">\r\n                              {notebook.hardware\r\n                                .split(\",\")\r\n                                .map((props, index) => (\r\n                                  <div key={index}>\r\n                                    <span>{props}</span>\r\n                                    <br />\r\n                                  </div>\r\n                                ))}\r\n                            </div>\r\n                          </div>\r\n                          <img\r\n                            className=\"goods_notebook_rank\"\r\n                            src={`/img/rating/${notebook.rank}.png`}\r\n                            alt=\"rankimage\"\r\n                          ></img>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </NavLink>\r\n                ))}\r\n            </div>\r\n            {!props.error ? (\r\n              <Page\r\n                itemlen={itemlen}\r\n                searchParams={props.searchParams}\r\n                setSearchParams={props.setSearchParams}\r\n                searchparamshandler={props.searchparamshandler}\r\n                itemcount={6}\r\n              ></Page>\r\n            ) : (\r\n              <Page\r\n                itemlen={1}\r\n                searchParams={props.searchParams}\r\n                setSearchParams={props.setSearchParams}\r\n                searchparamshandler={props.searchparamshandler}\r\n                itemcount={6}\r\n              ></Page>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Goods;\r\n","import React from \"react\";\r\nimport \"./Pagetitle.css\";\r\n\r\nconst Pagetitle = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={`pagetitle_title center ${props.className}`}>\r\n        {props.title}\r\n      </div>\r\n      <div className={`pagetitle_guide center ${props.className}`}>\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagetitle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      className={`backdrop ${props.className}`}\r\n      onClick={props.onClick}\r\n    ></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={`card ${props.className}`}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport \"./Filter.css\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Filter = (props) => {\r\n  let pricecheck = false;\r\n  if (props.title === \"낮은가격순\") {\r\n    pricecheck = true;\r\n  }\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const searchparamshandler = (sort, value) => {\r\n    //쿼리 생성\r\n    searchParams.set(`${sort}`, `${value}`);\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  const [showFilter, setShowFilter] = useState(false); //필터 활성화,비활성화\r\n  const closefilter = () => {\r\n    setShowFilter(false);\r\n  };\r\n  const openfilter = () => {\r\n    setShowFilter(true);\r\n    filtercancle();\r\n  };\r\n\r\n  const pricearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 price 메뉴 체크\r\n  const [priceIndex, setPriceIndex] = useState(\r\n    searchParams.get(\"price\") === null\r\n      ? 0\r\n      : parseInt(pricearray.indexOf(searchParams.get(\"price\")))\r\n  );\r\n\r\n  const datearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 date 메뉴 체크\r\n  const [dateIndex, setDateIndex] = useState(\r\n    searchParams.get(\"date\") === null\r\n      ? 0\r\n      : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n  );\r\n\r\n  // const namearray = [\"all\", \"asc\", \"desc\"]; //쿼리에 따라 name 메뉴 체크\r\n  // const [nameIndex, setNameIndex] = useState(\r\n  //   searchParams.get(\"name\") === null\r\n  //     ? 0\r\n  //     : parseInt(namearray.indexOf(searchParams.get(\"name\")))\r\n  // );\r\n\r\n  const ratingarray = [\"\", \"ss\", \"s\", \"a\", \"b\", \"c\"]; //쿼리에 따라 rank 메뉴 체크\r\n  const [ratingIndex, setRatingIndex] = useState(\r\n    searchParams.get(\"rating\") === null\r\n      ? 0\r\n      : parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n  );\r\n\r\n  const [filter, setFilter] = useState({\r\n    //filter 내용 초기값 지정\r\n    rating: `${\r\n      searchParams.get(\"rating\") === null\r\n        ? \"\"\r\n        : ratingarray[parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))]\r\n    }`,\r\n    ...(pricecheck\r\n      ? {\r\n          price: `${\r\n            searchParams.get(\"price\") === null\r\n              ? \"asc\"\r\n              : datearray[\r\n                  parseInt(datearray.indexOf(searchParams.get(\"price\")))\r\n                ]\r\n          }`,\r\n        }\r\n      : {\r\n          date: `${\r\n            searchParams.get(\"date\") === null\r\n              ? \"desc\"\r\n              : datearray[parseInt(datearray.indexOf(searchParams.get(\"date\")))]\r\n          }`,\r\n          // name: `${\r\n          //   searchParams.get(\"name\") === null\r\n          //     ? \"asc\"\r\n          //     : namearray[parseInt(namearray.indexOf(searchParams.get(\"name\")))]\r\n          // }`,\r\n        }),\r\n  });\r\n  const filtersave = () => {\r\n    //저장하기 클릭 시 filter에 따른 쿼리 생성\r\n    for (const key in filter) {\r\n      searchparamshandler(`${key}`, `${filter[key]}`);\r\n      searchparamshandler(`page`, 1);\r\n    }\r\n  };\r\n  const filtercancle = () => {\r\n    //취소하기 선택 시 선택 된 버튼과 filter값 초기화\r\n    setDateIndex(\r\n      searchParams.get(\"date\") === null\r\n        ? 0\r\n        : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n    );\r\n    // setNameIndex(\r\n    //   searchParams.get(\"date\") === null\r\n    //     ? 0\r\n    //     : parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n    // );\r\n    setRatingIndex(\r\n      searchParams.get(\"rating\") === null\r\n        ? 0\r\n        : parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n    );\r\n\r\n    if (pricecheck) {\r\n      setPriceIndex(\r\n        searchParams.get(\"price\") === null\r\n          ? 0\r\n          : parseInt(pricearray.indexOf(searchParams.get(\"price\")))\r\n      );\r\n    }\r\n\r\n    setFilter({\r\n      rating: `${\r\n        searchParams.get(\"rating\") === null\r\n          ? \"\"\r\n          : ratingarray[\r\n              parseInt(ratingarray.indexOf(searchParams.get(\"rating\")))\r\n            ]\r\n      }`,\r\n      ...(pricecheck\r\n        ? {\r\n            price: `${\r\n              searchParams.get(\"price\") === null\r\n                ? \"asc\"\r\n                : datearray[\r\n                    parseInt(datearray.indexOf(searchParams.get(\"price\")))\r\n                  ]\r\n            }`,\r\n          }\r\n        : {\r\n            date: `${\r\n              searchParams.get(\"date\") === null\r\n                ? \"all\"\r\n                : datearray[\r\n                    parseInt(datearray.indexOf(searchParams.get(\"date\")))\r\n                  ]\r\n            }`,\r\n            // name: `${\r\n            //   searchParams.get(\"name\") === null\r\n            //     ? \"all\"\r\n            //     : namearray[\r\n            //         parseInt(namearray.indexOf(searchParams.get(\"name\")))\r\n            //       ]\r\n            // }`,\r\n          }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal show={showFilter} onCancel={closefilter} className=\"filter-modal\">\r\n        <div className=\"filter-modal_title\">\r\n          <div className=\"filter-modal_title_text\">필터</div>\r\n          <img\r\n            className=\"filter-modal_title_cancle\"\r\n            src=\"/img/modal/Cancle.png\"\r\n            alt=\"Cancle\"\r\n            onClick={closefilter}\r\n          />\r\n        </div>\r\n        {pricecheck && (\r\n          <>\r\n            <div className=\"filter-modal_date\">가격</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"asc\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    priceIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    setPriceIndex(index);\r\n                    setFilter((prev) => ({ ...prev, price: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        {!pricecheck && (\r\n          <>\r\n            <div\r\n              className={pricecheck ? \"filter-modal_name\" : \"filter-modal_date\"}\r\n            >\r\n              날짜\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"all\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    dateIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    setDateIndex(index);\r\n                    setFilter((prev) => ({ ...prev, date: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {/* <div className=\"filter-modal_name\">이름</div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                [\"전체\", \"all\"],\r\n                [\"오름차순\", \"asc\"],\r\n                [\"내림차순\", \"desc\"],\r\n              ].map((menu, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`filter-modal_menu center ${\r\n                    nameIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n                  }`}\r\n                  onClick={() => {\r\n                    // setNameIndex(index);\r\n                    setFilter((prev) => ({ ...prev, name: `${menu[1]}` }));\r\n                  }}\r\n                >\r\n                  {menu[0]}\r\n                </div>\r\n              ))}\r\n            </div> */}\r\n          </>\r\n        )}\r\n\r\n        <div className=\"filter-modal_name\">등급</div>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", width: \"14rem\" }}>\r\n          {[\r\n            [\"전체\", \"\"],\r\n            [\"SS\", \"ss\"],\r\n            [\"S\", \"s\"],\r\n            [\"A\", \"a\"],\r\n            [\"B\", \"b\"],\r\n            [\"C\", \"c\"],\r\n          ].map((menu, index) => (\r\n            <div\r\n              key={index}\r\n              className={`filter-modal_menu center ${\r\n                ratingIndex === index ? \" filter-modal_menu_active\" : \"\" //선택된 메뉴 css 변경\r\n              }`}\r\n              onClick={() => {\r\n                setRatingIndex(index);\r\n                setFilter((prev) => ({ ...prev, rating: `${menu[1]}` }));\r\n              }}\r\n            >\r\n              {menu[0]}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div\r\n            className=\"filter-modal_savebtn center\"\r\n            onClick={() => {\r\n              closefilter();\r\n              filtersave();\r\n            }}\r\n          >\r\n            저장하기\r\n          </div>\r\n          <div\r\n            className=\"filter-modal_canclebtn center\"\r\n            onClick={() => {\r\n              filtercancle();\r\n              closefilter();\r\n            }}\r\n          >\r\n            취소\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <img\r\n        className=\"filterimg\"\r\n        src=\"/img/rating/Filter.png\"\r\n        alt=\"filterimage\"\r\n      ></img>\r\n      <div className=\"filter\" onClick={openfilter}>\r\n        {props.title}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport Card from \"./Card\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && (\r\n        <Backdrop onClick={props.onCancel} className={props.Backdropclass} />\r\n      )}\r\n      {props.detail && (\r\n        <div className=\"backdrop_double\" onClick={props.onCancel} />\r\n      )}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200} // 200ms 동안 트랜지션 지속\r\n        classNames=\"modal\"\r\n      >\r\n        <>\r\n          <Card className={`modal ${props.className}`}>{props.children}</Card>\r\n          {props.detail && (\r\n            <div className=\"slide_modal_container \">\r\n              <img\r\n                src=\"/img/admin/Left_arrow.png\"\r\n                alt=\"left_arrow\"\r\n                className=\"modal_arrow_detail\"\r\n              />\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.front)}\r\n              >\r\n                <img\r\n                  src={props.front}\r\n                  alt=\"front\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.back)}\r\n              >\r\n                <img\r\n                  src={props.back}\r\n                  alt=\"back\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.keyboard)}\r\n              >\r\n                <img\r\n                  src={props.keyboard}\r\n                  alt=\"keyboard\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"modal_img_slide_container\"\r\n                onClick={() => props.onImageClick(props.monitor)}\r\n              >\r\n                <img\r\n                  src={props.monitor}\r\n                  alt=\"monitor\"\r\n                  className=\"detail_aspect_laptop\"\r\n                />\r\n              </div>\r\n              <img\r\n                src=\"/img/admin/Right_arrow.png\"\r\n                alt=\"left_arrow\"\r\n                className=\"modal_arrow_detail\"\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Page.css\";\r\n\r\nconst Page = (props) => {\r\n  const searchParams = props.searchParams;\r\n  const setSearchParams = props.setSearchParams;\r\n  const searchparamshandler = props.searchparamshandler;\r\n  const page = Math.ceil(props.itemlen / props.itemcount); //데이터 총 개수에 따라 페이지 계산\r\n  const pagearray = [];\r\n  for (let i = 1; i < page + 1; i++) {\r\n    pagearray.push(i);\r\n  }\r\n  const [pageindex, setPageIndex] = useState(\r\n    searchParams.get(\"page\") === null\r\n      ? 0\r\n      : parseInt(pagearray.indexOf(parseInt(searchParams.get(\"page\")))) //쿼리에 따라 페이지 체크\r\n  );\r\n  const pageplus = () => {\r\n    //페이지 증가\r\n    if (pageindex === page - 1) {\r\n      setPageIndex(pageindex);\r\n    } else {\r\n      setPageIndex(pageindex + 1);\r\n      searchParams.set(\"page\", `${pageindex + 2}`);\r\n      setSearchParams(searchParams);\r\n    }\r\n  };\r\n  const pageminus = () => {\r\n    //페이지 감소\r\n    if (pageindex === 0) {\r\n      setPageIndex(0);\r\n    } else {\r\n      setPageIndex(pageindex - 1);\r\n      searchParams.set(\"page\", `${pageindex}`);\r\n      setSearchParams(searchParams);\r\n    }\r\n  };\r\n\r\n  const [pagecut, setPagecut] = useState(0); //페이지를 5단위로 체크하고 변경\r\n  useEffect(() => {\r\n    if (pageindex > pagecut + 4) {\r\n      setPagecut(pagecut + 5);\r\n    } else if (pageindex < pagecut) {\r\n      setPagecut(pagecut - 5);\r\n    }\r\n  }, [pageindex, pagecut]);\r\n\r\n  return (\r\n    <div className=\"page center\">\r\n      <img\r\n        className=\"page_arrow\"\r\n        src=\"/img/rating/leftarrow.png\"\r\n        onClick={pageminus}\r\n        alt=\"pagearrow\"\r\n      />\r\n      <div className=\"page_num_contain center\">\r\n        {/*페이지 표시*/}\r\n        {page < 5\r\n          ? pagearray.map((page, index) => (\r\n              <div\r\n                key={index}\r\n                className={`page_num center ${\r\n                  pageindex === index ? \" page_num_active\" : \"\"\r\n                }`}\r\n                onClick={() => {\r\n                  setPageIndex(index);\r\n                  searchparamshandler(\"page\", `${index + 1}`);\r\n                }}\r\n              >\r\n                {page}\r\n              </div>\r\n            ))\r\n          : pagearray.map((page, index) => {\r\n              return (\r\n                index >= pagecut &&\r\n                index <= 4 + pagecut && (\r\n                  <div\r\n                    key={index}\r\n                    className={`page_num center ${\r\n                      pageindex === index ? \" page_num_active\" : \"\"\r\n                    }`}\r\n                    onClick={() => {\r\n                      setPageIndex(index);\r\n                      searchparamshandler(\"page\", `${index + 1}`);\r\n                    }}\r\n                  >\r\n                    {page}\r\n                  </div>\r\n                )\r\n              );\r\n            })}\r\n      </div>\r\n      <img\r\n        className=\"page_arrow\"\r\n        src=\"/img/rating/rightarrow.png\"\r\n        onClick={pageplus}\r\n        alt=\"pagearrow\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["props","isLoading","loadedGoods","itemlen","totalcount","_jsx","React","children","_Fragment","_jsxs","className","Pagetitle","title","Filter","error","map","notebook","index","NavLink","to","concat","laptop_info_list_id","style","textDecoration","laptop_info_list","laptop_info_list_image","length","src","path","alt","device_name","price_time_sale","toString","replace","price","os","screen_size","business_usage","split","img","internet_lecture_usage","gaming_usage","hardware","rank","Page","searchParams","setSearchParams","searchparamshandler","itemcount","ReactDOM","onClick","document","getElementById","pricecheck","useSearchParams","sort","value","set","showFilter","setShowFilter","useState","closefilter","pricearray","priceIndex","setPriceIndex","get","parseInt","indexOf","datearray","dateIndex","setDateIndex","ratingarray","ratingIndex","setRatingIndex","filter","setFilter","rating","date","filtercancle","Modal","show","onCancel","display","menu","prev","flexWrap","width","filtersave","key","openfilter","Backdrop","Backdropclass","detail","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Card","onImageClick","front","back","keyboard","monitor","page","Math","ceil","pagearray","i","push","pageindex","setPageIndex","pagecut","setPagecut","useEffect","pageminus","pageplus"],"sourceRoot":""}